

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Mar 30 15:43:38 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           	psect	idataCOMRAM
    48  00775B                     __pidataCOMRAM:
    49                           	opt stack 0
    50                           
    51                           ;initializer for _config_1
    52  00775B  2C                 	db	44
    53                           
    54                           ;initializer for _s_7
    55  00775C  20                 	db	32
    56  00775D  31                 	db	49
    57  00775E  36                 	db	54
    58  00775F  62                 	db	98
    59  007760  79                 	db	121
    60  007761  74                 	db	116
    61  007762  65                 	db	101
    62  007763  73                 	db	115
    63  007764  0D                 	db	13
    64  007765  09                 	db	9
    65  007766  09                 	db	9
    66  007767  00                 	db	0
    67                           
    68                           ;initializer for _s_9
    69  007768  20                 	db	32
    70  007769  31                 	db	49
    71  00776A  36                 	db	54
    72  00776B  62                 	db	98
    73  00776C  79                 	db	121
    74  00776D  74                 	db	116
    75  00776E  65                 	db	101
    76  00776F  73                 	db	115
    77  007770  0A                 	db	10
    78  007771  0D                 	db	13
    79  007772  00                 	db	0
    80                           
    81                           ;initializer for _s_1
    82  007773  0A                 	db	10
    83  007774  0D                 	db	13
    84  007775  49                 	db	73
    85  007776  6E                 	db	110
    86  007777  76                 	db	118
    87  007778  61                 	db	97
    88  007779  6C                 	db	108
    89  00777A  69                 	db	105
    90  00777B  64                 	db	100
    91  00777C  00                 	db	0
    92                           
    93                           ;initializer for _s_8
    94  00777D  0D                 	db	13
    95  00777E  09                 	db	9
    96  00777F  09                 	db	9
    97  007780  09                 	db	9
    98  007781  70                 	db	112
    99  007782  61                 	db	97
   100  007783  67                 	db	103
   101  007784  65                 	db	101
   102  007785  20                 	db	32
   103  007786  00                 	db	0
   104                           
   105                           ;initializer for _s_6
   106  007787  0A                 	db	10
   107  007788  0D                 	db	13
   108  007789  50                 	db	80
   109  00778A  61                 	db	97
   110  00778B  67                 	db	103
   111  00778C  65                 	db	101
   112  00778D  20                 	db	32
   113  00778E  00                 	db	0
   114                           
   115                           ;initializer for _new_ln
   116  00778F  0A                 	db	10
   117  007790  0D                 	db	13
   118  007791  00                 	db	0
   119                           
   120                           	psect	idataBANK0
   121  00799F                     __pidataBANK0:
   122                           	opt stack 0
   123                           
   124                           ;initializer for _s_4
   125  00799F  45                 	db	69
   126  0079A0  6E                 	db	110
   127  0079A1  74                 	db	116
   128  0079A2  65                 	db	101
   129  0079A3  72                 	db	114
   130  0079A4  20                 	db	32
   131  0079A5  74                 	db	116
   132  0079A6  68                 	db	104
   133  0079A7  65                 	db	101
   134  0079A8  20                 	db	32
   135  0079A9  41                 	db	65
   136  0079AA  64                 	db	100
   137  0079AB  64                 	db	100
   138  0079AC  72                 	db	114
   139  0079AD  65                 	db	101
   140  0079AE  73                 	db	115
   141  0079AF  73                 	db	115
   142  0079B0  20                 	db	32
   143  0079B1  28                 	db	40
   144  0079B2  70                 	db	112
   145  0079B3  61                 	db	97
   146  0079B4  67                 	db	103
   147  0079B5  65                 	db	101
   148  0079B6  20                 	db	32
   149  0079B7  4E                 	db	78
   150  0079B8  6F                 	db	111
   151  0079B9  2E                 	db	46
   152  0079BA  31                 	db	49
   153  0079BB  20                 	db	32
   154  0079BC  2D                 	db	45
   155  0079BD  20                 	db	32
   156  0079BE  38                 	db	56
   157  0079BF  29                 	db	41
   158  0079C0  00                 	db	0
   159                           
   160                           ;initializer for _s_5
   161  0079C1  45                 	db	69
   162  0079C2  6E                 	db	110
   163  0079C3  74                 	db	116
   164  0079C4  65                 	db	101
   165  0079C5  72                 	db	114
   166  0079C6  20                 	db	32
   167  0079C7  74                 	db	116
   168  0079C8  68                 	db	104
   169  0079C9  65                 	db	101
   170  0079CA  20                 	db	32
   171  0079CB  4F                 	db	79
   172  0079CC  66                 	db	102
   173  0079CD  66                 	db	102
   174  0079CE  73                 	db	115
   175  0079CF  65                 	db	101
   176  0079D0  74                 	db	116
   177  0079D1  20                 	db	32
   178  0079D2  28                 	db	40
   179  0079D3  31                 	db	49
   180  0079D4  20                 	db	32
   181  0079D5  2D                 	db	45
   182  0079D6  20                 	db	32
   183  0079D7  00                 	db	0
   184                           
   185                           ;initializer for _s_2
   186  0079D8  45                 	db	69
   187  0079D9  6E                 	db	110
   188  0079DA  74                 	db	116
   189  0079DB  65                 	db	101
   190  0079DC  72                 	db	114
   191  0079DD  20                 	db	32
   192  0079DE  74                 	db	116
   193  0079DF  68                 	db	104
   194  0079E0  65                 	db	101
   195  0079E1  20                 	db	32
   196  0079E2  41                 	db	65
   197  0079E3  64                 	db	100
   198  0079E4  64                 	db	100
   199  0079E5  72                 	db	114
   200  0079E6  65                 	db	101
   201  0079E7  73                 	db	115
   202  0079E8  73                 	db	115
   203  0079E9  20                 	db	32
   204  0079EA  28                 	db	40
   205  0079EB  70                 	db	112
   206  0079EC  61                 	db	97
   207  0079ED  67                 	db	103
   208  0079EE  65                 	db	101
   209  0079EF  20                 	db	32
   210  0079F0  31                 	db	49
   211  0079F1  20                 	db	32
   212  0079F2  2D                 	db	45
   213  0079F3  20                 	db	32
   214  0079F4  38                 	db	56
   215  0079F5  29                 	db	41
   216  0079F6  00                 	db	0
   217                           
   218                           ;initializer for _s_3
   219  0079F7  45                 	db	69
   220  0079F8  6E                 	db	110
   221  0079F9  74                 	db	116
   222  0079FA  65                 	db	101
   223  0079FB  72                 	db	114
   224  0079FC  20                 	db	32
   225  0079FD  74                 	db	116
   226  0079FE  68                 	db	104
   227  0079FF  65                 	db	101
   228  007A00  20                 	db	32
   229  007A01  4F                 	db	79
   230  007A02  66                 	db	102
   231  007A03  66                 	db	102
   232  007A04  73                 	db	115
   233  007A05  65                 	db	101
   234  007A06  74                 	db	116
   235  007A07  20                 	db	32
   236  007A08  28                 	db	40
   237  007A09  31                 	db	49
   238  007A0A  20                 	db	32
   239  007A0B  2D                 	db	45
   240  007A0C  20                 	db	32
   241  007A0D  00                 	db	0
   242                           
   243                           	psect	idataBANK1
   244  007B70                     __pidataBANK1:
   245                           	opt stack 0
   246                           
   247                           ;initializer for _s_10
   248  007B70  0A                 	db	10
   249  007B71  0D                 	db	13
   250  007B72  45                 	db	69
   251  007B73  72                 	db	114
   252  007B74  61                 	db	97
   253  007B75  73                 	db	115
   254  007B76  65                 	db	101
   255  007B77  20                 	db	32
   256  007B78  45                 	db	69
   257  007B79  45                 	db	69
   258  007B7A  50                 	db	80
   259  007B7B  52                 	db	82
   260  007B7C  4F                 	db	79
   261  007B7D  4D                 	db	77
   262  007B7E  0D                 	db	13
   263  007B7F  09                 	db	9
   264  007B80  09                 	db	9
   265  007B81  20                 	db	32
   266  007B82  2D                 	db	45
   267  007B83  20                 	db	32
   268  007B84  28                 	db	40
   269  007B85  70                 	db	112
   270  007B86  72                 	db	114
   271  007B87  65                 	db	101
   272  007B88  73                 	db	115
   273  007B89  73                 	db	115
   274  007B8A  20                 	db	32
   275  007B8B  27                 	db	39
   276  007B8C  31                 	db	49
   277  007B8D  27                 	db	39
   278  007B8E  29                 	db	41
   279  007B8F  20                 	db	32
   280  007B90  41                 	db	65
   281  007B91  6C                 	db	108
   282  007B92  6C                 	db	108
   283  007B93  20                 	db	32
   284  007B94  64                 	db	100
   285  007B95  61                 	db	97
   286  007B96  74                 	db	116
   287  007B97  61                 	db	97
   288  007B98  20                 	db	32
   289  007B99  77                 	db	119
   290  007B9A  69                 	db	105
   291  007B9B  6C                 	db	108
   292  007B9C  6C                 	db	108
   293  007B9D  20                 	db	32
   294  007B9E  62                 	db	98
   295  007B9F  65                 	db	101
   296  007BA0  20                 	db	32
   297  007BA1  6C                 	db	108
   298  007BA2  6F                 	db	111
   299  007BA3  73                 	db	115
   300  007BA4  74                 	db	116
   301  007BA5  2E                 	db	46
   302  007BA6  2E                 	db	46
   303  007BA7  21                 	db	33
   304  007BA8  0A                 	db	10
   305  007BA9  0D                 	db	13
   306  007BAA  45                 	db	69
   307  007BAB  72                 	db	114
   308  007BAC  61                 	db	97
   309  007BAD  73                 	db	115
   310  007BAE  65                 	db	101
   311  007BAF  20                 	db	32
   312  007BB0  61                 	db	97
   313  007BB1  20                 	db	32
   314  007BB2  70                 	db	112
   315  007BB3  61                 	db	97
   316  007BB4  67                 	db	103
   317  007BB5  65                 	db	101
   318  007BB6  0D                 	db	13
   319  007BB7  09                 	db	9
   320  007BB8  09                 	db	9
   321  007BB9  20                 	db	32
   322  007BBA  2D                 	db	45
   323  007BBB  20                 	db	32
   324  007BBC  28                 	db	40
   325  007BBD  70                 	db	112
   326  007BBE  72                 	db	114
   327  007BBF  65                 	db	101
   328  007BC0  73                 	db	115
   329  007BC1  73                 	db	115
   330  007BC2  20                 	db	32
   331  007BC3  27                 	db	39
   332  007BC4  32                 	db	50
   333  007BC5  27                 	db	39
   334  007BC6  29                 	db	41
   335  007BC7  00                 	db	0
   336                           
   337                           ;initializer for _s_11
   338  007BC8  0A                 	db	10
   339  007BC9  0D                 	db	13
   340  007BCA  53                 	db	83
   341  007BCB  65                 	db	101
   342  007BCC  6C                 	db	108
   343  007BCD  65                 	db	101
   344  007BCE  63                 	db	99
   345  007BCF  74                 	db	116
   346  007BD0  20                 	db	32
   347  007BD1  77                 	db	119
   348  007BD2  72                 	db	114
   349  007BD3  69                 	db	105
   350  007BD4  74                 	db	116
   351  007BD5  65                 	db	101
   352  007BD6  2F                 	db	47
   353  007BD7  72                 	db	114
   354  007BD8  65                 	db	101
   355  007BD9  61                 	db	97
   356  007BDA  64                 	db	100
   357  007BDB  2F                 	db	47
   358  007BDC  65                 	db	101
   359  007BDD  72                 	db	114
   360  007BDE  61                 	db	97
   361  007BDF  73                 	db	115
   362  007BE0  65                 	db	101
   363  007BE1  2F                 	db	47
   364  007BE2  65                 	db	101
   365  007BE3  78                 	db	120
   366  007BE4  69                 	db	105
   367  007BE5  74                 	db	116
   368  007BE6  3F                 	db	63
   369  007BE7  20                 	db	32
   370  007BE8  70                 	db	112
   371  007BE9  72                 	db	114
   372  007BEA  65                 	db	101
   373  007BEB  73                 	db	115
   374  007BEC  73                 	db	115
   375  007BED  20                 	db	32
   376  007BEE  77                 	db	119
   377  007BEF  2F                 	db	47
   378  007BF0  72                 	db	114
   379  007BF1  2F                 	db	47
   380  007BF2  64                 	db	100
   381  007BF3  2F                 	db	47
   382  007BF4  65                 	db	101
   383  007BF5  00                 	db	0
   384  0000                     _ADCON1	set	4033
   385  0000                     _CMCON	set	4020
   386  0000                     _PIE1bits	set	3997
   387  0000                     _PIR1bits	set	3998
   388  0000                     _PIR2bits	set	4001
   389  0000                     _RCREG	set	4014
   390  0000                     _RCSTA	set	4011
   391  0000                     _RCSTAbits	set	4011
   392  0000                     _SPBRG	set	4015
   393  0000                     _SPBRGH	set	4016
   394  0000                     _SSPADD	set	4040
   395  0000                     _SSPBUF	set	4041
   396  0000                     _SSPCON1	set	4038
   397  0000                     _SSPCON1bits	set	4038
   398  0000                     _SSPCON2	set	4037
   399  0000                     _SSPCON2bits	set	4037
   400  0000                     _SSPSTAT	set	4039
   401  0000                     _SSPSTATbits	set	4039
   402  0000                     _TRISBbits	set	3987
   403  0000                     _TRISCbits	set	3988
   404  0000                     _TXREG	set	4013
   405  0000                     _TXSTA	set	4012
   406  0000                     _TXSTAbits	set	4012
   407                           
   408                           ; #config settings
   409  0000                     
   410                           	psect	cinit
   411  007AF4                     __pcinit:
   412                           	opt stack 0
   413  007AF4                     start_initialization:
   414                           	opt stack 0
   415  007AF4                     __initialization:
   416                           	opt stack 0
   417                           
   418                           ; Clear objects allocated to BANK0 (33 bytes)
   419  007AF4  EE00  F0CF         	lfsr	0,__pbssBANK0
   420  007AF8  0E21               	movlw	33
   421  007AFA                     clear_0:
   422  007AFA  6AEE               	clrf	postinc0,c
   423  007AFC  06E8               	decf	wreg,f,c
   424  007AFE  E1FD               	bnz	clear_0
   425                           
   426                           ; Clear objects allocated to COMRAM (3 bytes)
   427  007B00  6A4D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   428  007B02  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   429  007B04  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   430                           
   431                           ; Initialize objects allocated to BANK1 (134 bytes)
   432                           ; load TBLPTR registers with __pidataBANK1
   433  007B06  0E70               	movlw	low __pidataBANK1
   434  007B08  6EF6               	movwf	tblptrl,c
   435  007B0A  0E7B               	movlw	high __pidataBANK1
   436  007B0C  6EF7               	movwf	tblptrh,c
   437  007B0E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   438  007B10  6EF8               	movwf	tblptru,c
   439  007B12  EE01  F000         	lfsr	0,__pdataBANK1
   440  007B16  EE10 F086          	lfsr	1,134
   441  007B1A                     copy_data0:
   442  007B1A  0009               	tblrd		*+
   443  007B1C  CFF5 FFEE          	movff	tablat,postinc0
   444  007B20  50E5               	movf	postdec1,w,c
   445  007B22  50E1               	movf	fsr1l,w,c
   446  007B24  E1FA               	bnz	copy_data0
   447                           
   448                           ; Initialize objects allocated to BANK0 (111 bytes)
   449                           ; load TBLPTR registers with __pidataBANK0
   450  007B26  0E9F               	movlw	low __pidataBANK0
   451  007B28  6EF6               	movwf	tblptrl,c
   452  007B2A  0E79               	movlw	high __pidataBANK0
   453  007B2C  6EF7               	movwf	tblptrh,c
   454  007B2E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   455  007B30  6EF8               	movwf	tblptru,c
   456  007B32  EE00  F060         	lfsr	0,__pdataBANK0
   457  007B36  EE10 F06F          	lfsr	1,111
   458  007B3A                     copy_data1:
   459  007B3A  0009               	tblrd		*+
   460  007B3C  CFF5 FFEE          	movff	tablat,postinc0
   461  007B40  50E5               	movf	postdec1,w,c
   462  007B42  50E1               	movf	fsr1l,w,c
   463  007B44  E1FA               	bnz	copy_data1
   464                           
   465                           ; Initialize objects allocated to COMRAM (55 bytes)
   466                           ; load TBLPTR registers with __pidataCOMRAM
   467  007B46  0E5B               	movlw	low __pidataCOMRAM
   468  007B48  6EF6               	movwf	tblptrl,c
   469  007B4A  0E77               	movlw	high __pidataCOMRAM
   470  007B4C  6EF7               	movwf	tblptrh,c
   471  007B4E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   472  007B50  6EF8               	movwf	tblptru,c
   473  007B52  EE00  F001         	lfsr	0,__pdataCOMRAM
   474  007B56  EE10 F037          	lfsr	1,55
   475  007B5A                     copy_data2:
   476  007B5A  0009               	tblrd		*+
   477  007B5C  CFF5 FFEE          	movff	tablat,postinc0
   478  007B60  50E5               	movf	postdec1,w,c
   479  007B62  50E1               	movf	fsr1l,w,c
   480  007B64  E1FA               	bnz	copy_data2
   481  007B66                     end_of_initialization:
   482                           	opt stack 0
   483  007B66                     __end_of__initialization:
   484                           	opt stack 0
   485  007B66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   486  007B68  6EF8               	movwf	tblptru,c
   487  007B6A  0100               	movlb	0
   488  007B6C  EF56  F03B         	goto	_main	;jump to C main() function
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498                           	psect	bssCOMRAM
   499  00004B                     __pbssCOMRAM:
   500                           	opt stack 0
   501  00004B                     _USART_Status:
   502                           	opt stack 0
   503  00004B                     	ds	1
   504  00004C                     _c:
   505                           	opt stack 0
   506  00004C                     	ds	1
   507  00004D                     _i:
   508                           	opt stack 0
   509  00004D                     	ds	1
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           postdec1	equ	0xFE5
   517                           fsr1l	equ	0xFE1
   518                           
   519                           	psect	dataCOMRAM
   520  000001                     __pdataCOMRAM:
   521                           	opt stack 0
   522  000001                     _config_1:
   523                           	opt stack 0
   524  000001                     	ds	1
   525  000002                     _s_7:
   526                           	opt stack 0
   527  000002                     	ds	12
   528  00000E                     _s_9:
   529                           	opt stack 0
   530  00000E                     	ds	11
   531  000019                     _s_1:
   532                           	opt stack 0
   533  000019                     	ds	10
   534  000023                     _s_8:
   535                           	opt stack 0
   536  000023                     	ds	10
   537  00002D                     _s_6:
   538                           	opt stack 0
   539  00002D                     	ds	8
   540  000035                     _new_ln:
   541                           	opt stack 0
   542  000035                     	ds	3
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           postinc0	equ	0xFEE
   548                           wreg	equ	0xFE8
   549                           postdec1	equ	0xFE5
   550                           fsr1l	equ	0xFE1
   551                           
   552                           	psect	bssBANK0
   553  0000CF                     __pbssBANK0:
   554                           	opt stack 0
   555  0000CF                     _str:
   556                           	opt stack 0
   557  0000CF                     	ds	33
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           postdec1	equ	0xFE5
   565                           fsr1l	equ	0xFE1
   566                           
   567                           	psect	dataBANK0
   568  000060                     __pdataBANK0:
   569                           	opt stack 0
   570  000060                     _s_4:
   571                           	opt stack 0
   572  000060                     	ds	34
   573  000082                     _s_5:
   574                           	opt stack 0
   575  000082                     	ds	23
   576  000099                     _s_2:
   577                           	opt stack 0
   578  000099                     	ds	31
   579  0000B8                     _s_3:
   580                           	opt stack 0
   581  0000B8                     	ds	23
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1l	equ	0xFE1
   590                           
   591                           	psect	dataBANK1
   592  000100                     __pdataBANK1:
   593                           	opt stack 0
   594  000100                     _s_10:
   595                           	opt stack 0
   596  000100                     	ds	88
   597  000158                     _s_11:
   598                           	opt stack 0
   599  000158                     	ds	46
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           postinc0	equ	0xFEE
   605                           wreg	equ	0xFE8
   606                           postdec1	equ	0xFE5
   607                           fsr1l	equ	0xFE1
   608                           
   609                           	psect	cstackCOMRAM
   610  000038                     __pcstackCOMRAM:
   611                           	opt stack 0
   612  000038                     ??_IdleI2C:
   613  000038                     ReadBUF@c:
   614                           	opt stack 0
   615  000038                     ReadUSART@data:
   616                           	opt stack 0
   617  000038                     WriteUSART@data:
   618                           	opt stack 0
   619  000038                     OpenI2C@slew:
   620                           	opt stack 0
   621  000038                     Delay1KTCYx@unit:
   622                           	opt stack 0
   623  000038                     Clear_str@str:
   624                           	opt stack 0
   625  000038                     OpenUSART@spbrg:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x0
   629  000038                     	ds	1
   630  000039                     ??_WriteI2C:
   631  000039                     delay_ms@t:
   632                           	opt stack 0
   633  000039                     ReadUART@c:
   634                           	opt stack 0
   635  000039                     Write@data:
   636                           	opt stack 0
   637  000039                     OpenI2C@sync_mode:
   638                           	opt stack 0
   639  000039                     Read_str_@buffer:
   640                           	opt stack 0
   641  000039                     putsUSART@data:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x1
   645  000039                     	ds	1
   646  00003A                     ??_OpenUSART:
   647  00003A                     delay_ms@i:
   648                           	opt stack 0
   649  00003A                     Clear_str@n:
   650                           	opt stack 0
   651  00003A                     WriteI2C@data_out:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x2
   655  00003A                     	ds	1
   656  00003B                     ??_EEAckPolling:
   657  00003B                     ?_EERandomRead:
   658                           	opt stack 0
   659  00003B                     Clear_str@i:
   660                           	opt stack 0
   661  00003B                     Read_str_@i:
   662                           	opt stack 0
   663  00003B                     EEByteWrite@address:
   664                           	opt stack 0
   665  00003B                     EERandomRead@address:
   666                           	opt stack 0
   667  00003B                     Write_str@str:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x3
   671  00003B                     	ds	1
   672  00003C                     Read_str_@data:
   673                           	opt stack 0
   674  00003C                     EEAckPolling@control:
   675                           	opt stack 0
   676  00003C                     EEByteWrite@data:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x4
   680  00003C                     	ds	1
   681  00003D                     Select@range_1:
   682                           	opt stack 0
   683  00003D                     OpenUSART@config:
   684                           	opt stack 0
   685  00003D                     EEByteWrite@control:
   686                           	opt stack 0
   687  00003D                     EERandomRead@control:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x5
   691  00003D                     	ds	1
   692  00003E                     Select@range_2:
   693                           	opt stack 0
   694  00003E                     WriteEEPROM@Address:
   695                           	opt stack 0
   696  00003E                     ReadEEPROM@Address:
   697                           	opt stack 0
   698  00003E                     ConfigUSART@config_2:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x6
   702  00003E                     	ds	1
   703  00003F                     Select@sign:
   704                           	opt stack 0
   705  00003F                     ConfigUSART@config_1:
   706                           	opt stack 0
   707  00003F                     WriteEEPROM@str:
   708                           	opt stack 0
   709  00003F                     ReadEEPROM@str:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x7
   713  00003F                     	ds	1
   714  000040                     EraseEEPROM@m:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x8
   718  000040                     	ds	1
   719  000041                     WriteEEPROM@Control:
   720                           	opt stack 0
   721  000041                     ReadEEPROM@Control:
   722                           	opt stack 0
   723  000041                     EraseEEPROM@j:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x9
   727  000041                     	ds	1
   728  000042                     WriteEEPROM@k:
   729                           	opt stack 0
   730  000042                     ReadEEPROM@c:
   731                           	opt stack 0
   732  000042                     EraseEEPROM@p:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0xA
   736  000042                     	ds	1
   737  000043                     ReadEEPROM@i:
   738                           	opt stack 0
   739  000043                     EraseEEPROM@i:
   740                           	opt stack 0
   741  000043                     WriteEEPROM_DATA@m:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0xB
   745  000043                     	ds	1
   746  000044                     EraseEEPROM@n:
   747                           	opt stack 0
   748  000044                     WriteEEPROM_DATA@j:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0xC
   752  000044                     	ds	1
   753  000045                     WriteEEPROM_DATA@b:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0xD
   757  000045                     	ds	1
   758  000046                     WriteEEPROM_DATA@n:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0xE
   762  000046                     	ds	1
   763  000047                     EEPROM_RUN@i:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0xF
   767  000047                     	ds	1
   768  000048                     EEPROM_RUN@d:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x10
   772  000048                     	ds	1
   773  000049                     EEPROM_RUN@n:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x11
   777  000049                     	ds	1
   778  00004A                     EEPROM_RUN@j:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x12
   782  00004A                     	ds	1
   783  00004B                     tblptru	equ	0xFF8
   784                           tblptrh	equ	0xFF7
   785                           tblptrl	equ	0xFF6
   786                           tablat	equ	0xFF5
   787                           postinc0	equ	0xFEE
   788                           wreg	equ	0xFE8
   789                           postdec1	equ	0xFE5
   790                           fsr1l	equ	0xFE1
   791                           
   792                           ; 0 bytes @ 0x13
   793 ;;
   794 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   795 ;;
   796 ;; *************** function _main *****************
   797 ;; Defined at:
   798 ;;		line 65 in file "main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;		None               void
   805 ;; Registers used:
   806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   812 ;;      Params:         0       0       0       0       0       0       0       0       0
   813 ;;      Locals:         0       0       0       0       0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0
   815 ;;      Totals:         0       0       0       0       0       0       0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels required when called:    7
   818 ;; This function calls:
   819 ;;		_ConfigUSART
   820 ;;		_EEPROM_ON
   821 ;;		_EEPROM_RUN
   822 ;; This function is called by:
   823 ;;		Startup code after reset
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text0
   828  0076AC                     __ptext0:
   829                           	opt stack 0
   830  0076AC                     _main:
   831                           	opt stack 24
   832                           
   833                           ;main.c: 67: CMCON |= 7;
   834                           
   835                           ;incstack = 0
   836  0076AC  0E07               	movlw	7
   837  0076AE  12B4               	iorwf	4020,f,c	;volatile
   838                           
   839                           ;main.c: 68: ADCON1=0x0F;
   840  0076B0  0E0F               	movlw	15
   841  0076B2  6EC1               	movwf	4033,c	;volatile
   842                           
   843                           ;main.c: 69: ConfigUSART(config_1, ((20000000/9600/64)-1));
   844  0076B4  0E1F               	movlw	31
   845  0076B6  6E3E               	movwf	ConfigUSART@config_2,c
   846  0076B8  5001               	movf	_config_1,w,c
   847  0076BA  EC13  F03B         	call	_ConfigUSART
   848                           
   849                           ;main.c: 70: EEPROM_ON();
   850  0076BE  EC3D  F03B         	call	_EEPROM_ON	;wreg free
   851  0076C2                     l2436:
   852                           
   853                           ;main.c: 72: {
   854                           ;main.c: 73: EEPROM_RUN();
   855  0076C2  EC49  F03F         	call	_EEPROM_RUN	;wreg free
   856  0076C6  D7FD               	goto	l2436
   857  0076C8                     __end_of_main:
   858                           	opt stack 0
   859                           tblptru	equ	0xFF8
   860                           tblptrh	equ	0xFF7
   861                           tblptrl	equ	0xFF6
   862                           tablat	equ	0xFF5
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           postdec1	equ	0xFE5
   866                           fsr1l	equ	0xFE1
   867                           
   868 ;; *************** function _EEPROM_RUN *****************
   869 ;; Defined at:
   870 ;;		line 240 in file "eeprom.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  j               1   18[COMRAM] unsigned char 
   875 ;;  n               1   17[COMRAM] unsigned char 
   876 ;;  d               1   16[COMRAM] unsigned char 
   877 ;;  i               1   15[COMRAM] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;		None               void
   880 ;; Registers used:
   881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   887 ;;      Params:         0       0       0       0       0       0       0       0       0
   888 ;;      Locals:         4       0       0       0       0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0       0       0
   890 ;;      Totals:         4       0       0       0       0       0       0       0       0
   891 ;;Total ram usage:        4 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    6
   894 ;; This function calls:
   895 ;;		_Clear_str
   896 ;;		_EraseEEPROM
   897 ;;		_ReadEEPROM
   898 ;;		_Select
   899 ;;		_Write
   900 ;;		_WriteEEPROM_DATA
   901 ;;		_Write_str
   902 ;;		_delay_ms
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text1
   909  007E92                     __ptext1:
   910                           	opt stack 0
   911  007E92                     _EEPROM_RUN:
   912                           	opt stack 24
   913                           
   914                           ;eeprom.c: 242: unsigned char n = 0,i=0,d,j;
   915                           
   916                           ;incstack = 0
   917  007E92  0E00               	movlw	0
   918  007E94  6E49               	movwf	EEPROM_RUN@n,c
   919  007E96  0E00               	movlw	0
   920  007E98  6E47               	movwf	EEPROM_RUN@i,c
   921  007E9A                     l2354:
   922                           
   923                           ;eeprom.c: 244: Write_str(s_11);
   924  007E9A  0101               	movlb	1	; () banked
   925  007E9C  0E01               	movlw	high _s_11
   926  007E9E  6E3C               	movwf	Write_str@str+1,c
   927  007EA0  0101               	movlb	1	; () banked
   928  007EA2  0E58               	movlw	low _s_11
   929  007EA4  6E3B               	movwf	Write_str@str,c
   930  007EA6  EC34  F03B         	call	_Write_str	;wreg free
   931                           
   932                           ;eeprom.c: 245: d = RCREG;
   933  007EAA  CFAE F048          	movff	4014,EEPROM_RUN@d	;volatile
   934                           
   935                           ;eeprom.c: 246: c = Select(0,0,0);
   936  007EAE  0E00               	movlw	0
   937  007EB0  6E3D               	movwf	Select@range_1,c
   938  007EB2  0E00               	movlw	0
   939  007EB4  6E3E               	movwf	Select@range_2,c
   940  007EB6  0E00               	movlw	0
   941  007EB8  EC39  F03C         	call	_Select
   942  007EBC  6E4C               	movwf	_c,c
   943                           
   944                           ;eeprom.c: 247: if((c == 'w')||(c =='W'))
   945  007EBE  504C               	movf	_c,w,c
   946  007EC0  0A77               	xorlw	119
   947  007EC2  B4D8               	btfsc	status,2,c
   948  007EC4  D004               	goto	l2364
   949  007EC6  504C               	movf	_c,w,c
   950  007EC8  0A57               	xorlw	87
   951  007ECA  A4D8               	btfss	status,2,c
   952  007ECC  D003               	goto	l2366
   953  007ECE                     l2364:
   954                           
   955                           ;eeprom.c: 248: WriteEEPROM_DATA();
   956  007ECE  ECD1  F03E         	call	_WriteEEPROM_DATA	;wreg free
   957  007ED2  D075               	goto	l2410
   958  007ED4                     l2366:
   959                           
   960                           ;eeprom.c: 249: else if((c == 'r')||(c =='R'))
   961  007ED4  504C               	movf	_c,w,c
   962  007ED6  0A72               	xorlw	114
   963  007ED8  B4D8               	btfsc	status,2,c
   964  007EDA  D004               	goto	l2370
   965  007EDC  504C               	movf	_c,w,c
   966  007EDE  0A52               	xorlw	82
   967  007EE0  A4D8               	btfss	status,2,c
   968  007EE2  D03C               	goto	l2392
   969  007EE4                     l2370:
   970                           
   971                           ;eeprom.c: 250: {
   972                           ;eeprom.c: 251: j=0;
   973  007EE4  0E00               	movlw	0
   974  007EE6  6E4A               	movwf	EEPROM_RUN@j,c
   975                           
   976                           ;eeprom.c: 252: while(j!=8)
   977  007EE8  D034               	goto	l2390
   978  007EEA                     l2372:
   979                           
   980                           ;eeprom.c: 253: {
   981                           ;eeprom.c: 254: ReadEEPROM(0xA0, n, str);
   982  007EEA  C049  F03E         	movff	EEPROM_RUN@n,ReadEEPROM@Address
   983  007EEE  0100               	movlb	0	; () banked
   984  007EF0  0E00               	movlw	high _str
   985  007EF2  6E40               	movwf	ReadEEPROM@str+1,c
   986  007EF4  0100               	movlb	0	; () banked
   987  007EF6  0ECF               	movlw	low _str
   988  007EF8  6E3F               	movwf	ReadEEPROM@str,c
   989  007EFA  0EA0               	movlw	160
   990  007EFC  ECC9  F03B         	call	_ReadEEPROM
   991                           
   992                           ;eeprom.c: 255: delay_ms(1);
   993  007F00  0E01               	movlw	1
   994  007F02  EC49  F03B         	call	_delay_ms
   995                           
   996                           ;eeprom.c: 256: j++;
   997  007F06  2A4A               	incf	EEPROM_RUN@j,f,c
   998                           
   999                           ;eeprom.c: 257: n=n+16;
  1000  007F08  5049               	movf	EEPROM_RUN@n,w,c
  1001  007F0A  0F10               	addlw	16
  1002  007F0C  6E49               	movwf	EEPROM_RUN@n,c
  1003                           
  1004                           ;eeprom.c: 258: Write_str(str);
  1005  007F0E  0100               	movlb	0	; () banked
  1006  007F10  0E00               	movlw	high _str
  1007  007F12  6E3C               	movwf	Write_str@str+1,c
  1008  007F14  0100               	movlb	0	; () banked
  1009  007F16  0ECF               	movlw	low _str
  1010  007F18  6E3B               	movwf	Write_str@str,c
  1011  007F1A  EC34  F03B         	call	_Write_str	;wreg free
  1012                           
  1013                           ;eeprom.c: 259: Write_str(s_8);
  1014  007F1E  0E00               	movlw	high _s_8
  1015  007F20  6E3C               	movwf	Write_str@str+1,c
  1016  007F22  0E23               	movlw	low _s_8
  1017  007F24  6E3B               	movwf	Write_str@str,c
  1018  007F26  EC34  F03B         	call	_Write_str	;wreg free
  1019                           
  1020                           ;eeprom.c: 260: Write((j+'0'));
  1021  007F2A  504A               	movf	EEPROM_RUN@j,w,c
  1022  007F2C  0F30               	addlw	48
  1023  007F2E  EC0C  F03B         	call	_Write
  1024                           
  1025                           ;eeprom.c: 261: Write_str(s_9);
  1026  007F32  0E00               	movlw	high _s_9
  1027  007F34  6E3C               	movwf	Write_str@str+1,c
  1028  007F36  0E0E               	movlw	low _s_9
  1029  007F38  6E3B               	movwf	Write_str@str,c
  1030  007F3A  EC34  F03B         	call	_Write_str	;wreg free
  1031                           
  1032                           ;eeprom.c: 262: Clear_str(str, 32);
  1033  007F3E  0100               	movlb	0	; () banked
  1034  007F40  0E00               	movlw	high _str
  1035  007F42  6E39               	movwf	Clear_str@str+1,c
  1036  007F44  0100               	movlb	0	; () banked
  1037  007F46  0ECF               	movlw	low _str
  1038  007F48  6E38               	movwf	Clear_str@str,c
  1039  007F4A  0E20               	movlw	32
  1040  007F4C  6E3A               	movwf	Clear_str@n,c
  1041  007F4E  EC95  F03B         	call	_Clear_str	;wreg free
  1042  007F52                     l2390:
  1043  007F52  504A               	movf	EEPROM_RUN@j,w,c
  1044  007F54  0A08               	xorlw	8
  1045  007F56  B4D8               	btfsc	status,2,c
  1046  007F58  D032               	goto	l2410
  1047  007F5A  D7C7               	goto	l2372
  1048  007F5C                     l2392:
  1049                           
  1050                           ;eeprom.c: 265: else if((c == 'd')||(c =='D'))
  1051  007F5C  504C               	movf	_c,w,c
  1052  007F5E  0A64               	xorlw	100
  1053  007F60  B4D8               	btfsc	status,2,c
  1054  007F62  D004               	goto	l2396
  1055  007F64  504C               	movf	_c,w,c
  1056  007F66  0A44               	xorlw	68
  1057  007F68  A4D8               	btfss	status,2,c
  1058  007F6A  D021               	goto	l2406
  1059  007F6C                     l2396:
  1060                           
  1061                           ;eeprom.c: 266: {
  1062                           ;eeprom.c: 267: Write_str(s_10);
  1063  007F6C  0101               	movlb	1	; () banked
  1064  007F6E  0E01               	movlw	high _s_10
  1065  007F70  6E3C               	movwf	Write_str@str+1,c
  1066  007F72  0101               	movlb	1	; () banked
  1067  007F74  0E00               	movlw	low _s_10
  1068  007F76  6E3B               	movwf	Write_str@str,c
  1069  007F78  EC34  F03B         	call	_Write_str	;wreg free
  1070                           
  1071                           ;eeprom.c: 268: c = Select('n',1,2);
  1072  007F7C  0E01               	movlw	1
  1073  007F7E  6E3D               	movwf	Select@range_1,c
  1074  007F80  0E02               	movlw	2
  1075  007F82  6E3E               	movwf	Select@range_2,c
  1076  007F84  0E6E               	movlw	110
  1077  007F86  EC39  F03C         	call	_Select
  1078  007F8A  6E4C               	movwf	_c,c
  1079                           
  1080                           ;eeprom.c: 269: switch(c)
  1081  007F8C  D008               	goto	l2404
  1082  007F8E                     l2398:
  1083  007F8E  0E7A               	movlw	122
  1084  007F90  EC5B  F03E         	call	_EraseEEPROM
  1085                           
  1086                           ;eeprom.c: 272: break;
  1087  007F94  D014               	goto	l2410
  1088  007F96                     l2400:
  1089  007F96  0E78               	movlw	120
  1090  007F98  EC5B  F03E         	call	_EraseEEPROM
  1091                           
  1092                           ;eeprom.c: 274: break;
  1093  007F9C  D010               	goto	l2410
  1094  007F9E                     l2404:
  1095  007F9E  504C               	movf	_c,w,c
  1096                           
  1097                           ; Switch size 1, requested type "space"
  1098                           ; Number of cases is 2, Range of values is 1 to 2
  1099                           ; switch strategies available:
  1100                           ; Name         Instructions Cycles
  1101                           ; simple_byte            7     4 (average)
  1102                           ;	Chosen strategy is simple_byte
  1103  007FA0  0A01               	xorlw	1	; case 1
  1104  007FA2  B4D8               	btfsc	status,2,c
  1105  007FA4  D7F4               	goto	l2398
  1106  007FA6  0A03               	xorlw	3	; case 2
  1107  007FA8  B4D8               	btfsc	status,2,c
  1108  007FAA  D7F5               	goto	l2400
  1109  007FAC  D008               	goto	l2410
  1110  007FAE                     l2406:
  1111                           
  1112                           ;eeprom.c: 277: else if((c == 'e')||(c =='E'))
  1113  007FAE  504C               	movf	_c,w,c
  1114  007FB0  0A65               	xorlw	101
  1115  007FB2  B4D8               	btfsc	status,2,c
  1116  007FB4  D024               	goto	l213
  1117  007FB6  504C               	movf	_c,w,c
  1118  007FB8  0A45               	xorlw	69
  1119  007FBA  B4D8               	btfsc	status,2,c
  1120  007FBC  D020               	goto	l213
  1121  007FBE                     l2410:
  1122                           
  1123                           ;eeprom.c: 279: }while((c!='e')&&(c!='E')&&(c!='r')&&(c!='R')&&(c!='w')&&(c!='W') &&(c!=
      +                          'd')&&(c!='D'));
  1124  007FBE  504C               	movf	_c,w,c
  1125  007FC0  0A65               	xorlw	101
  1126  007FC2  B4D8               	btfsc	status,2,c
  1127  007FC4  D01C               	goto	l213
  1128  007FC6  504C               	movf	_c,w,c
  1129  007FC8  0A45               	xorlw	69
  1130  007FCA  B4D8               	btfsc	status,2,c
  1131  007FCC  D018               	goto	l213
  1132  007FCE  504C               	movf	_c,w,c
  1133  007FD0  0A72               	xorlw	114
  1134  007FD2  B4D8               	btfsc	status,2,c
  1135  007FD4  D014               	goto	l213
  1136  007FD6  504C               	movf	_c,w,c
  1137  007FD8  0A52               	xorlw	82
  1138  007FDA  B4D8               	btfsc	status,2,c
  1139  007FDC  D010               	goto	l213
  1140  007FDE  504C               	movf	_c,w,c
  1141  007FE0  0A77               	xorlw	119
  1142  007FE2  B4D8               	btfsc	status,2,c
  1143  007FE4  D00C               	goto	l213
  1144  007FE6  504C               	movf	_c,w,c
  1145  007FE8  0A57               	xorlw	87
  1146  007FEA  B4D8               	btfsc	status,2,c
  1147  007FEC  D008               	goto	l213
  1148  007FEE  504C               	movf	_c,w,c
  1149  007FF0  0A64               	xorlw	100
  1150  007FF2  B4D8               	btfsc	status,2,c
  1151  007FF4  D004               	goto	l213
  1152  007FF6  504C               	movf	_c,w,c
  1153  007FF8  0A44               	xorlw	68
  1154  007FFA  A4D8               	btfss	status,2,c
  1155  007FFC  D74E               	goto	l2354
  1156  007FFE                     l213:
  1157  007FFE  0012               	return	
  1158  008000                     __end_of_EEPROM_RUN:
  1159                           	opt stack 0
  1160                           tblptru	equ	0xFF8
  1161                           tblptrh	equ	0xFF7
  1162                           tblptrl	equ	0xFF6
  1163                           tablat	equ	0xFF5
  1164                           postinc0	equ	0xFEE
  1165                           wreg	equ	0xFE8
  1166                           postdec1	equ	0xFE5
  1167                           fsr1l	equ	0xFE1
  1168                           status	equ	0xFD8
  1169                           
  1170 ;; *************** function _WriteEEPROM_DATA *****************
  1171 ;; Defined at:
  1172 ;;		line 198 in file "eeprom.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  n               1   14[COMRAM] unsigned char 
  1177 ;;  b               1   13[COMRAM] unsigned char 
  1178 ;;  j               1   12[COMRAM] unsigned char 
  1179 ;;  m               1   11[COMRAM] unsigned char 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;		None               void
  1182 ;; Registers used:
  1183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0
  1190 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1192 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1193 ;;Total ram usage:        4 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    5
  1196 ;; This function calls:
  1197 ;;		_Clear_str
  1198 ;;		_Read_str_
  1199 ;;		_Select
  1200 ;;		_Write
  1201 ;;		_WriteEEPROM
  1202 ;;		_Write_str
  1203 ;;		_delay_ms
  1204 ;; This function is called by:
  1205 ;;		_EEPROM_RUN
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text2
  1210  007DA2                     __ptext2:
  1211                           	opt stack 0
  1212  007DA2                     _WriteEEPROM_DATA:
  1213                           	opt stack 24
  1214                           
  1215                           ;eeprom.c: 200: unsigned char n=0, m=0, j=0, b=0;
  1216                           
  1217                           ;incstack = 0
  1218  007DA2  0E00               	movlw	0
  1219  007DA4  6E46               	movwf	WriteEEPROM_DATA@n,c
  1220  007DA6  0E00               	movlw	0
  1221  007DA8  6E43               	movwf	WriteEEPROM_DATA@m,c
  1222  007DAA  0E00               	movlw	0
  1223  007DAC  6E44               	movwf	WriteEEPROM_DATA@j,c
  1224  007DAE  0E00               	movlw	0
  1225  007DB0  6E45               	movwf	WriteEEPROM_DATA@b,c
  1226                           
  1227                           ;eeprom.c: 201: Write_str(s_2);
  1228  007DB2  0100               	movlb	0	; () banked
  1229  007DB4  0E00               	movlw	high _s_2
  1230  007DB6  6E3C               	movwf	Write_str@str+1,c
  1231  007DB8  0100               	movlb	0	; () banked
  1232  007DBA  0E99               	movlw	low _s_2
  1233  007DBC  6E3B               	movwf	Write_str@str,c
  1234  007DBE  EC34  F03B         	call	_Write_str	;wreg free
  1235                           
  1236                           ;eeprom.c: 202: n=Select('n',1,8);
  1237  007DC2  0E01               	movlw	1
  1238  007DC4  6E3D               	movwf	Select@range_1,c
  1239  007DC6  0E08               	movlw	8
  1240  007DC8  6E3E               	movwf	Select@range_2,c
  1241  007DCA  0E6E               	movlw	110
  1242  007DCC  EC39  F03C         	call	_Select
  1243  007DD0  6E46               	movwf	WriteEEPROM_DATA@n,c
  1244                           
  1245                           ;eeprom.c: 203: Write_str(s_3);
  1246  007DD2  0100               	movlb	0	; () banked
  1247  007DD4  0E00               	movlw	high _s_3
  1248  007DD6  6E3C               	movwf	Write_str@str+1,c
  1249  007DD8  0100               	movlb	0	; () banked
  1250  007DDA  0EB8               	movlw	low _s_3
  1251  007DDC  6E3B               	movwf	Write_str@str,c
  1252  007DDE  EC34  F03B         	call	_Write_str	;wreg free
  1253                           
  1254                           ;eeprom.c: 204: Write((8-(n-1))+'0');
  1255  007DE2  0446               	decf	WriteEEPROM_DATA@n,w,c
  1256  007DE4  0800               	sublw	0
  1257  007DE6  0F38               	addlw	56
  1258  007DE8  EC0C  F03B         	call	_Write
  1259                           
  1260                           ;eeprom.c: 205: Write(')');
  1261  007DEC  0E29               	movlw	41
  1262  007DEE  EC0C  F03B         	call	_Write
  1263                           
  1264                           ;eeprom.c: 206: m=Select('n',1,8-(n-1));
  1265  007DF2  0E01               	movlw	1
  1266  007DF4  6E3D               	movwf	Select@range_1,c
  1267  007DF6  0446               	decf	WriteEEPROM_DATA@n,w,c
  1268  007DF8  0800               	sublw	0
  1269  007DFA  0F08               	addlw	8
  1270  007DFC  6E3E               	movwf	Select@range_2,c
  1271  007DFE  0E6E               	movlw	110
  1272  007E00  EC39  F03C         	call	_Select
  1273  007E04  6E43               	movwf	WriteEEPROM_DATA@m,c
  1274                           
  1275                           ;eeprom.c: 207: b=n;
  1276  007E06  C046  F045         	movff	WriteEEPROM_DATA@n,WriteEEPROM_DATA@b
  1277                           
  1278                           ;eeprom.c: 208: n--;
  1279  007E0A  0646               	decf	WriteEEPROM_DATA@n,f,c
  1280                           
  1281                           ;eeprom.c: 209: n=n*16;
  1282  007E0C  5046               	movf	WriteEEPROM_DATA@n,w,c
  1283  007E0E  0D10               	mullw	16
  1284  007E10  CFF3 F046          	movff	prodl,WriteEEPROM_DATA@n
  1285                           
  1286                           ;eeprom.c: 210: j=0;
  1287  007E14  0E00               	movlw	0
  1288  007E16  6E44               	movwf	WriteEEPROM_DATA@j,c
  1289                           
  1290                           ;eeprom.c: 212: while(j!=m)
  1291  007E18  D038               	goto	l2350
  1292  007E1A                     l2330:
  1293                           
  1294                           ;eeprom.c: 213: {
  1295                           ;eeprom.c: 214: Write_str(s_6);
  1296  007E1A  0E00               	movlw	high _s_6
  1297  007E1C  6E3C               	movwf	Write_str@str+1,c
  1298  007E1E  0E2D               	movlw	low _s_6
  1299  007E20  6E3B               	movwf	Write_str@str,c
  1300  007E22  EC34  F03B         	call	_Write_str	;wreg free
  1301                           
  1302                           ;eeprom.c: 215: Write((b+'0'));
  1303  007E26  5045               	movf	WriteEEPROM_DATA@b,w,c
  1304  007E28  0F30               	addlw	48
  1305  007E2A  EC0C  F03B         	call	_Write
  1306                           
  1307                           ;eeprom.c: 216: Write_str(s_7);
  1308  007E2E  0E00               	movlw	high _s_7
  1309  007E30  6E3C               	movwf	Write_str@str+1,c
  1310  007E32  0E02               	movlw	low _s_7
  1311  007E34  6E3B               	movwf	Write_str@str,c
  1312  007E36  EC34  F03B         	call	_Write_str	;wreg free
  1313                           
  1314                           ;eeprom.c: 217: Read_str_(str);
  1315  007E3A  0100               	movlb	0	; () banked
  1316  007E3C  0E00               	movlw	high _str
  1317  007E3E  6E3A               	movwf	Read_str_@buffer+1,c
  1318  007E40  0100               	movlb	0	; () banked
  1319  007E42  0ECF               	movlw	low _str
  1320  007E44  6E39               	movwf	Read_str_@buffer,c
  1321  007E46  EC6A  F03C         	call	_Read_str_	;wreg free
  1322                           
  1323                           ;eeprom.c: 218: delay_ms(1);
  1324  007E4A  0E01               	movlw	1
  1325  007E4C  EC49  F03B         	call	_delay_ms
  1326                           
  1327                           ;eeprom.c: 219: WriteEEPROM(0xA0, n, str);
  1328  007E50  C046  F03E         	movff	WriteEEPROM_DATA@n,WriteEEPROM@Address
  1329  007E54  0100               	movlb	0	; () banked
  1330  007E56  0E00               	movlw	high _str
  1331  007E58  6E40               	movwf	WriteEEPROM@str+1,c
  1332  007E5A  0100               	movlb	0	; () banked
  1333  007E5C  0ECF               	movlw	low _str
  1334  007E5E  6E3F               	movwf	WriteEEPROM@str,c
  1335  007E60  0EA0               	movlw	160
  1336  007E62  ECE5  F03B         	call	_WriteEEPROM
  1337                           
  1338                           ;eeprom.c: 220: delay_ms(1);
  1339  007E66  0E01               	movlw	1
  1340  007E68  EC49  F03B         	call	_delay_ms
  1341                           
  1342                           ;eeprom.c: 221: Clear_str(str, 32);
  1343  007E6C  0100               	movlb	0	; () banked
  1344  007E6E  0E00               	movlw	high _str
  1345  007E70  6E39               	movwf	Clear_str@str+1,c
  1346  007E72  0100               	movlb	0	; () banked
  1347  007E74  0ECF               	movlw	low _str
  1348  007E76  6E38               	movwf	Clear_str@str,c
  1349  007E78  0E20               	movlw	32
  1350  007E7A  6E3A               	movwf	Clear_str@n,c
  1351  007E7C  EC95  F03B         	call	_Clear_str	;wreg free
  1352                           
  1353                           ;eeprom.c: 222: n=n+16;
  1354  007E80  5046               	movf	WriteEEPROM_DATA@n,w,c
  1355  007E82  0F10               	addlw	16
  1356  007E84  6E46               	movwf	WriteEEPROM_DATA@n,c
  1357                           
  1358                           ;eeprom.c: 223: j++;
  1359  007E86  2A44               	incf	WriteEEPROM_DATA@j,f,c
  1360                           
  1361                           ;eeprom.c: 224: b++;
  1362  007E88  2A45               	incf	WriteEEPROM_DATA@b,f,c
  1363  007E8A                     l2350:
  1364  007E8A  5043               	movf	WriteEEPROM_DATA@m,w,c
  1365  007E8C  6244               	cpfseq	WriteEEPROM_DATA@j,c
  1366  007E8E  D7C5               	goto	l2330
  1367  007E90  0012               	return	
  1368  007E92                     __end_of_WriteEEPROM_DATA:
  1369                           	opt stack 0
  1370                           tblptru	equ	0xFF8
  1371                           tblptrh	equ	0xFF7
  1372                           tblptrl	equ	0xFF6
  1373                           tablat	equ	0xFF5
  1374                           prodl	equ	0xFF3
  1375                           postinc0	equ	0xFEE
  1376                           wreg	equ	0xFE8
  1377                           postdec1	equ	0xFE5
  1378                           fsr1l	equ	0xFE1
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function _delay_ms *****************
  1382 ;; Defined at:
  1383 ;;		line 17 in file "delay.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  t               1    wreg     unsigned char 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  t               1    1[COMRAM] unsigned char 
  1388 ;;  i               1    2[COMRAM] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;		None               void
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:         0       0       0       0       0       0       0       0       0
  1399 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1401 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:        2 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    1
  1405 ;; This function calls:
  1406 ;;		_Delay1KTCYx
  1407 ;; This function is called by:
  1408 ;;		_WriteEEPROM_DATA
  1409 ;;		_EEPROM_RUN
  1410 ;;		_Delay_s
  1411 ;;		_ReadEEPROM_DATA
  1412 ;;		_Read
  1413 ;;		_Read_From_Addr
  1414 ;;		_Write_to_Addr
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text3
  1419  007692                     __ptext3:
  1420                           	opt stack 0
  1421  007692                     _delay_ms:
  1422                           	opt stack 28
  1423                           
  1424                           ;incstack = 0
  1425                           ;delay_ms@t stored from wreg
  1426  007692  6E39               	movwf	delay_ms@t,c
  1427                           
  1428                           ;delay.c: 19: unsigned char i;
  1429                           ;delay.c: 20: for (i=0;i<=t;i++)
  1430  007694  0E00               	movlw	0
  1431  007696  6E3A               	movwf	delay_ms@i,c
  1432  007698  D004               	goto	l2098
  1433  00769A                     l2094:
  1434                           
  1435                           ;delay.c: 21: Delay1KTCYx(5);
  1436  00769A  0E05               	movlw	5
  1437  00769C  EC23  F03B         	call	_Delay1KTCYx
  1438  0076A0  2A3A               	incf	delay_ms@i,f,c
  1439  0076A2                     l2098:
  1440  0076A2  503A               	movf	delay_ms@i,w,c
  1441  0076A4  5C39               	subwf	delay_ms@t,w,c
  1442  0076A6  A0D8               	btfss	status,0,c
  1443                           
  1444                           ;delay.c: 25: return;
  1445  0076A8  0012               	return	
  1446  0076AA  D7F7               	goto	l2094
  1447  0076AC                     __end_of_delay_ms:
  1448                           	opt stack 0
  1449                           tblptru	equ	0xFF8
  1450                           tblptrh	equ	0xFF7
  1451                           tblptrl	equ	0xFF6
  1452                           tablat	equ	0xFF5
  1453                           prodl	equ	0xFF3
  1454                           postinc0	equ	0xFEE
  1455                           wreg	equ	0xFE8
  1456                           postdec1	equ	0xFE5
  1457                           fsr1l	equ	0xFE1
  1458                           status	equ	0xFD8
  1459                           
  1460 ;; *************** function _Delay1KTCYx *****************
  1461 ;; Defined at:
  1462 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  unit            1    wreg     unsigned char 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  unit            1    0[COMRAM] unsigned char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;		None               void
  1469 ;; Registers used:
  1470 ;;		wreg
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1476 ;;      Params:         0       0       0       0       0       0       0       0       0
  1477 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1479 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1480 ;;Total ram usage:        1 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_delay_ms
  1486 ;;		_delay_us
  1487 ;;		_DelayPORXLCD
  1488 ;;		_DelayXLCD
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text4
  1493  007646                     __ptext4:
  1494                           	opt stack 0
  1495  007646                     _Delay1KTCYx:
  1496                           	opt stack 28
  1497                           
  1498                           ;incstack = 0
  1499                           ;Delay1KTCYx@unit stored from wreg
  1500  007646  6E38               	movwf	Delay1KTCYx@unit,c
  1501  007648                     l889:
  1502  007648  0EFA               	movlw	250
  1503  00764A                     u2787:
  1504  00764A  F000               	nop	
  1505  00764C  2EE8               	decfsz	wreg,f,c
  1506  00764E  D7FD               	goto	u2787
  1507  007650  2E38               	decfsz	Delay1KTCYx@unit,f,c
  1508  007652  D7FA               	goto	l889
  1509  007654  0012               	return	
  1510  007656                     __end_of_Delay1KTCYx:
  1511                           	opt stack 0
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           tblptrl	equ	0xFF6
  1515                           tablat	equ	0xFF5
  1516                           prodl	equ	0xFF3
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           postdec1	equ	0xFE5
  1520                           fsr1l	equ	0xFE1
  1521                           status	equ	0xFD8
  1522                           
  1523 ;; *************** function _WriteEEPROM *****************
  1524 ;; Defined at:
  1525 ;;		line 89 in file "eeprom.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  Control         1    wreg     unsigned char 
  1528 ;;  Address         1    6[COMRAM] unsigned char 
  1529 ;;  str             2    7[COMRAM] PTR unsigned char 
  1530 ;;		 -> str(33), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  Control         1    9[COMRAM] unsigned char 
  1533 ;;  k               1   10[COMRAM] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;		None               void
  1536 ;; Registers used:
  1537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1543 ;;      Params:         3       0       0       0       0       0       0       0       0
  1544 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1546 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1547 ;;Total ram usage:        5 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    3
  1550 ;; This function calls:
  1551 ;;		_EEAckPolling
  1552 ;;		_EEByteWrite
  1553 ;;		_ReadBUF
  1554 ;; This function is called by:
  1555 ;;		_WriteEEPROM_DATA
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text5
  1560  0077CA                     __ptext5:
  1561                           	opt stack 0
  1562  0077CA                     _WriteEEPROM:
  1563                           	opt stack 25
  1564                           
  1565                           ;incstack = 0
  1566                           ;WriteEEPROM@Control stored from wreg
  1567  0077CA  6E41               	movwf	WriteEEPROM@Control,c
  1568                           
  1569                           ;eeprom.c: 91: unsigned char k=0;
  1570  0077CC  0E00               	movlw	0
  1571  0077CE  6E42               	movwf	WriteEEPROM@k,c
  1572                           
  1573                           ;eeprom.c: 92: while((*str != '\0') && (k!=16))
  1574  0077D0  D014               	goto	l2144
  1575  0077D2                     l2132:
  1576                           
  1577                           ;eeprom.c: 93: {
  1578                           ;eeprom.c: 94: EEByteWrite(Control, Address, *str);
  1579  0077D2  C03E  F03B         	movff	WriteEEPROM@Address,EEByteWrite@address
  1580  0077D6  C03F  FFD9         	movff	WriteEEPROM@str,fsr2l
  1581  0077DA  C040  FFDA         	movff	WriteEEPROM@str+1,fsr2h
  1582  0077DE  50DF               	movf	indf2,w,c
  1583  0077E0  6E3C               	movwf	EEByteWrite@data,c
  1584  0077E2  5041               	movf	WriteEEPROM@Control,w,c
  1585  0077E4  EC3F  F03D         	call	_EEByteWrite
  1586                           
  1587                           ;eeprom.c: 95: ReadBUF();
  1588  0077E8  ECF9  F03A         	call	_ReadBUF	;wreg free
  1589                           
  1590                           ;eeprom.c: 96: EEAckPolling(0xA0);
  1591  0077EC  0EA0               	movlw	160
  1592  0077EE  EC09  F03C         	call	_EEAckPolling
  1593                           
  1594                           ;eeprom.c: 97: Address++;
  1595  0077F2  2A3E               	incf	WriteEEPROM@Address,f,c
  1596                           
  1597                           ;eeprom.c: 98: str++;
  1598  0077F4  4A3F               	infsnz	WriteEEPROM@str,f,c
  1599  0077F6  2A40               	incf	WriteEEPROM@str+1,f,c
  1600                           
  1601                           ;eeprom.c: 99: k++;
  1602  0077F8  2A42               	incf	WriteEEPROM@k,f,c
  1603  0077FA                     l2144:
  1604  0077FA  C03F  FFD9         	movff	WriteEEPROM@str,fsr2l
  1605  0077FE  C040  FFDA         	movff	WriteEEPROM@str+1,fsr2h
  1606  007802  50DF               	movf	indf2,w,c
  1607  007804  B4D8               	btfsc	status,2,c
  1608  007806  D004               	goto	l137
  1609  007808  5042               	movf	WriteEEPROM@k,w,c
  1610  00780A  0A10               	xorlw	16
  1611  00780C  A4D8               	btfss	status,2,c
  1612  00780E  D7E1               	goto	l2132
  1613  007810                     l137:
  1614  007810  0012               	return	
  1615  007812                     __end_of_WriteEEPROM:
  1616                           	opt stack 0
  1617                           tblptru	equ	0xFF8
  1618                           tblptrh	equ	0xFF7
  1619                           tblptrl	equ	0xFF6
  1620                           tablat	equ	0xFF5
  1621                           prodl	equ	0xFF3
  1622                           postinc0	equ	0xFEE
  1623                           wreg	equ	0xFE8
  1624                           postdec1	equ	0xFE5
  1625                           fsr1l	equ	0xFE1
  1626                           indf2	equ	0xFDF
  1627                           fsr2h	equ	0xFDA
  1628                           fsr2l	equ	0xFD9
  1629                           status	equ	0xFD8
  1630                           
  1631 ;; *************** function _Read_str_ *****************
  1632 ;; Defined at:
  1633 ;;		line 68 in file "uart.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  1636 ;;		 -> str(33), 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  data            1    4[COMRAM] unsigned char 
  1639 ;;  i               1    3[COMRAM] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;		None               void
  1642 ;; Registers used:
  1643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1649 ;;      Params:         2       0       0       0       0       0       0       0       0
  1650 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1652 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1653 ;;Total ram usage:        4 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    1
  1656 ;; This function calls:
  1657 ;;		_ReadUSART
  1658 ;;		_WriteUSART
  1659 ;; This function is called by:
  1660 ;;		_WriteEEPROM_DATA
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text6
  1665  0078D4                     __ptext6:
  1666                           	opt stack 0
  1667  0078D4                     _Read_str_:
  1668                           	opt stack 27
  1669                           
  1670                           ;uart.c: 70: char i;
  1671                           ;uart.c: 71: unsigned char data;
  1672                           ;uart.c: 72: for(i=0;((data!=0x0D)&&(i!=16));i++)
  1673                           
  1674                           ;incstack = 0
  1675  0078D4  0E00               	movlw	0
  1676  0078D6  6E3B               	movwf	Read_str_@i,c
  1677  0078D8  D017               	goto	l2224
  1678  0078DA                     l271:
  1679  0078DA  AA9E               	btfss	3998,5,c	;volatile
  1680  0078DC  D7FE               	goto	l271
  1681                           
  1682                           ;uart.c: 75: data = ReadUSART();
  1683  0078DE  EC73  F03B         	call	_ReadUSART	;wreg free
  1684  0078E2  6E3C               	movwf	Read_str_@data,c
  1685                           
  1686                           ;uart.c: 76: if(data!=0x0D)
  1687  0078E4  503C               	movf	Read_str_@data,w,c
  1688  0078E6  0A0D               	xorlw	13
  1689  0078E8  B4D8               	btfsc	status,2,c
  1690  0078EA  D009               	goto	l275
  1691                           
  1692                           ;uart.c: 77: {
  1693                           ;uart.c: 78: *buffer = data;
  1694  0078EC  C039  FFD9         	movff	Read_str_@buffer,fsr2l
  1695  0078F0  C03A  FFDA         	movff	Read_str_@buffer+1,fsr2h
  1696  0078F4  C03C  FFDF         	movff	Read_str_@data,indf2
  1697                           
  1698                           ;uart.c: 79: WriteUSART(data);
  1699  0078F8  503C               	movf	Read_str_@data,w,c
  1700  0078FA  EC2B  F03B         	call	_WriteUSART
  1701  0078FE                     l275:
  1702  0078FE  A2AC               	btfss	4012,1,c	;volatile
  1703  007900  D7FE               	goto	l275
  1704                           
  1705                           ;uart.c: 82: buffer++;
  1706  007902  4A39               	infsnz	Read_str_@buffer,f,c
  1707  007904  2A3A               	incf	Read_str_@buffer+1,f,c
  1708  007906  2A3B               	incf	Read_str_@i,f,c
  1709  007908                     l2224:
  1710  007908  503C               	movf	Read_str_@data,w,c
  1711  00790A  0A0D               	xorlw	13
  1712  00790C  B4D8               	btfsc	status,2,c
  1713  00790E  D00E               	goto	l2234
  1714  007910  503B               	movf	Read_str_@i,w,c
  1715  007912  0A10               	xorlw	16
  1716  007914  B4D8               	btfsc	status,2,c
  1717  007916  D00A               	goto	l2234
  1718  007918  D7E0               	goto	l271
  1719  00791A                     l2228:
  1720                           
  1721                           ;uart.c: 85: {
  1722                           ;uart.c: 86: *buffer = ' ';
  1723  00791A  C039  FFD9         	movff	Read_str_@buffer,fsr2l
  1724  00791E  C03A  FFDA         	movff	Read_str_@buffer+1,fsr2h
  1725  007922  0E20               	movlw	32
  1726  007924  6EDF               	movwf	indf2,c
  1727                           
  1728                           ;uart.c: 87: buffer++;
  1729  007926  4A39               	infsnz	Read_str_@buffer,f,c
  1730  007928  2A3A               	incf	Read_str_@buffer+1,f,c
  1731                           
  1732                           ;uart.c: 88: i++;
  1733  00792A  2A3B               	incf	Read_str_@i,f,c
  1734  00792C                     l2234:
  1735  00792C  503B               	movf	Read_str_@i,w,c
  1736  00792E  0A10               	xorlw	16
  1737  007930  B4D8               	btfsc	status,2,c
  1738  007932  0012               	return	
  1739  007934  D7F2               	goto	l2228
  1740  007936                     __end_of_Read_str_:
  1741                           	opt stack 0
  1742                           tblptru	equ	0xFF8
  1743                           tblptrh	equ	0xFF7
  1744                           tblptrl	equ	0xFF6
  1745                           tablat	equ	0xFF5
  1746                           prodl	equ	0xFF3
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1l	equ	0xFE1
  1751                           indf2	equ	0xFDF
  1752                           fsr2h	equ	0xFDA
  1753                           fsr2l	equ	0xFD9
  1754                           status	equ	0xFD8
  1755                           
  1756 ;; *************** function _Clear_str *****************
  1757 ;; Defined at:
  1758 ;;		line 169 in file "eeprom.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  str             2    0[COMRAM] PTR unsigned char 
  1761 ;;		 -> str(33), 
  1762 ;;  n               1    2[COMRAM] unsigned char 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  i               1    3[COMRAM] unsigned char 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;		None               void
  1767 ;; Registers used:
  1768 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1774 ;;      Params:         3       0       0       0       0       0       0       0       0
  1775 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1777 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1778 ;;Total ram usage:        4 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_WriteEEPROM_DATA
  1784 ;;		_EEPROM_RUN
  1785 ;;		_ReadEEPROM_DATA
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text7
  1790  00772A                     __ptext7:
  1791                           	opt stack 0
  1792  00772A                     _Clear_str:
  1793                           	opt stack 28
  1794                           
  1795                           ;eeprom.c: 171: unsigned char i=0;
  1796                           
  1797                           ;incstack = 0
  1798  00772A  0E00               	movlw	0
  1799  00772C  6E3B               	movwf	Clear_str@i,c
  1800                           
  1801                           ;eeprom.c: 172: while((i!=n) && (*str))
  1802  00772E  D009               	goto	l2208
  1803  007730                     l2202:
  1804                           
  1805                           ;eeprom.c: 173: {
  1806                           ;eeprom.c: 174: *str = ' ';
  1807  007730  C038  FFD9         	movff	Clear_str@str,fsr2l
  1808  007734  C039  FFDA         	movff	Clear_str@str+1,fsr2h
  1809  007738  0E20               	movlw	32
  1810  00773A  6EDF               	movwf	indf2,c
  1811                           
  1812                           ;eeprom.c: 175: i++;
  1813  00773C  2A3B               	incf	Clear_str@i,f,c
  1814                           
  1815                           ;eeprom.c: 176: str++;
  1816  00773E  4A38               	infsnz	Clear_str@str,f,c
  1817  007740  2A39               	incf	Clear_str@str+1,f,c
  1818  007742                     l2208:
  1819  007742  503B               	movf	Clear_str@i,w,c
  1820  007744  183A               	xorwf	Clear_str@n,w,c
  1821  007746  B4D8               	btfsc	status,2,c
  1822  007748  D007               	goto	l169
  1823  00774A  C038  FFD9         	movff	Clear_str@str,fsr2l
  1824  00774E  C039  FFDA         	movff	Clear_str@str+1,fsr2h
  1825  007752  50DF               	movf	indf2,w,c
  1826  007754  A4D8               	btfss	status,2,c
  1827  007756  D7EC               	goto	l2202
  1828  007758                     l169:
  1829  007758  0012               	return	
  1830  00775A                     __end_of_Clear_str:
  1831                           	opt stack 0
  1832                           tblptru	equ	0xFF8
  1833                           tblptrh	equ	0xFF7
  1834                           tblptrl	equ	0xFF6
  1835                           tablat	equ	0xFF5
  1836                           prodl	equ	0xFF3
  1837                           postinc0	equ	0xFEE
  1838                           wreg	equ	0xFE8
  1839                           postdec1	equ	0xFE5
  1840                           fsr1l	equ	0xFE1
  1841                           indf2	equ	0xFDF
  1842                           fsr2h	equ	0xFDA
  1843                           fsr2l	equ	0xFD9
  1844                           status	equ	0xFD8
  1845                           
  1846 ;; *************** function _ReadEEPROM *****************
  1847 ;; Defined at:
  1848 ;;		line 105 in file "eeprom.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  Control         1    wreg     unsigned char 
  1851 ;;  Address         1    6[COMRAM] unsigned char 
  1852 ;;  str             2    7[COMRAM] PTR unsigned char 
  1853 ;;		 -> str(33), 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  Control         1    9[COMRAM] unsigned char 
  1856 ;;  i               1   11[COMRAM] unsigned char 
  1857 ;;  c               1   10[COMRAM] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;		None               void
  1860 ;; Registers used:
  1861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1867 ;;      Params:         3       0       0       0       0       0       0       0       0
  1868 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1870 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1871 ;;Total ram usage:        6 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    3
  1874 ;; This function calls:
  1875 ;;		_EERandomRead
  1876 ;;		_ReadBUF
  1877 ;; This function is called by:
  1878 ;;		_EEPROM_RUN
  1879 ;;		_ReadEEPROM_DATA
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text8
  1884  007792                     __ptext8:
  1885                           	opt stack 0
  1886  007792                     _ReadEEPROM:
  1887                           	opt stack 26
  1888                           
  1889                           ;incstack = 0
  1890                           ;ReadEEPROM@Control stored from wreg
  1891  007792  6E41               	movwf	ReadEEPROM@Control,c
  1892                           
  1893                           ;eeprom.c: 107: unsigned char i = 0, c;
  1894  007794  0E00               	movlw	0
  1895  007796  6E43               	movwf	ReadEEPROM@i,c
  1896                           
  1897                           ;eeprom.c: 108: while(i!=16)
  1898  007798  D013               	goto	l2250
  1899  00779A                     l2238:
  1900                           
  1901                           ;eeprom.c: 109: {
  1902                           ;eeprom.c: 110: c = EERandomRead(Control, Address);
  1903  00779A  C03E  F03B         	movff	ReadEEPROM@Address,EERandomRead@address
  1904  00779E  5041               	movf	ReadEEPROM@Control,w,c
  1905  0077A0  ECFB  F03D         	call	_EERandomRead
  1906  0077A4  503B               	movf	?_EERandomRead,w,c
  1907  0077A6  6E42               	movwf	ReadEEPROM@c,c
  1908                           
  1909                           ;eeprom.c: 111: ReadBUF();
  1910  0077A8  ECF9  F03A         	call	_ReadBUF	;wreg free
  1911                           
  1912                           ;eeprom.c: 112: *str = c;
  1913  0077AC  C03F  FFD9         	movff	ReadEEPROM@str,fsr2l
  1914  0077B0  C040  FFDA         	movff	ReadEEPROM@str+1,fsr2h
  1915  0077B4  C042  FFDF         	movff	ReadEEPROM@c,indf2
  1916                           
  1917                           ;eeprom.c: 113: Address++;
  1918  0077B8  2A3E               	incf	ReadEEPROM@Address,f,c
  1919                           
  1920                           ;eeprom.c: 114: i++;
  1921  0077BA  2A43               	incf	ReadEEPROM@i,f,c
  1922                           
  1923                           ;eeprom.c: 115: str++;
  1924  0077BC  4A3F               	infsnz	ReadEEPROM@str,f,c
  1925  0077BE  2A40               	incf	ReadEEPROM@str+1,f,c
  1926  0077C0                     l2250:
  1927  0077C0  5043               	movf	ReadEEPROM@i,w,c
  1928  0077C2  0A10               	xorlw	16
  1929  0077C4  B4D8               	btfsc	status,2,c
  1930  0077C6  0012               	return	
  1931  0077C8  D7E8               	goto	l2238
  1932  0077CA                     __end_of_ReadEEPROM:
  1933                           	opt stack 0
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           prodl	equ	0xFF3
  1939                           postinc0	equ	0xFEE
  1940                           wreg	equ	0xFE8
  1941                           postdec1	equ	0xFE5
  1942                           fsr1l	equ	0xFE1
  1943                           indf2	equ	0xFDF
  1944                           fsr2h	equ	0xFDA
  1945                           fsr2l	equ	0xFD9
  1946                           status	equ	0xFD8
  1947                           
  1948 ;; *************** function _EERandomRead *****************
  1949 ;; Defined at:
  1950 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_eerr.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  control         1    wreg     unsigned char 
  1953 ;;  address         1    3[COMRAM] unsigned char 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  control         1    5[COMRAM] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2    3[COMRAM] int 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1965 ;;      Params:         2       0       0       0       0       0       0       0       0
  1966 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1968 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1969 ;;Total ram usage:        3 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    2
  1972 ;; This function calls:
  1973 ;;		_IdleI2C
  1974 ;;		_WriteI2C
  1975 ;; This function is called by:
  1976 ;;		_ReadEEPROM
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text9
  1981  007BF6                     __ptext9:
  1982                           	opt stack 0
  1983  007BF6                     _EERandomRead:
  1984                           	opt stack 26
  1985                           
  1986                           ;incstack = 0
  1987                           ;EERandomRead@control stored from wreg
  1988  007BF6  6E3D               	movwf	EERandomRead@control,c
  1989  007BF8  EC1B  F03B         	call	_IdleI2C	;wreg free
  1990  007BFC  80C5               	bsf	4037,0,c	;volatile
  1991  007BFE                     l519:
  1992  007BFE  B0C5               	btfsc	4037,0,c	;volatile
  1993  007C00  D7FE               	goto	l519
  1994  007C02                     l522:
  1995  007C02  B0C5               	btfsc	4037,0,c	;volatile
  1996  007C04  D7FE               	goto	l522
  1997  007C06  B6A1               	btfsc	4001,3,c	;volatile
  1998  007C08  D03E               	goto	u2250
  1999  007C0A  503D               	movf	EERandomRead@control,w,c
  2000  007C0C  EC07  F03D         	call	_WriteI2C
  2001  007C10  0900               	iorlw	0
  2002  007C12  B4D8               	btfsc	status,2,c
  2003  007C14  D004               	goto	l528
  2004  007C16  84C5               	bsf	4037,2,c	;volatile
  2005  007C18                     l529:
  2006  007C18  B4C5               	btfsc	4037,2,c	;volatile
  2007  007C1A  D7FE               	goto	l529
  2008  007C1C  D01E               	goto	l2180
  2009  007C1E                     l528:
  2010  007C1E  BCC5               	btfsc	4037,6,c	;volatile
  2011  007C20  D03F               	goto	l532
  2012  007C22  503B               	movf	EERandomRead@address,w,c
  2013  007C24  EC07  F03D         	call	_WriteI2C
  2014  007C28  0900               	iorlw	0
  2015  007C2A  B4D8               	btfsc	status,2,c
  2016  007C2C  D004               	goto	l533
  2017  007C2E  84C5               	bsf	4037,2,c	;volatile
  2018  007C30                     l534:
  2019  007C30  B4C5               	btfsc	4037,2,c	;volatile
  2020  007C32  D7FE               	goto	l534
  2021  007C34  D012               	goto	l2180
  2022  007C36                     l533:
  2023  007C36  BCC5               	btfsc	4037,6,c	;volatile
  2024  007C38  D02F               	goto	l537
  2025  007C3A  82C5               	bsf	4037,1,c	;volatile
  2026  007C3C                     l538:
  2027  007C3C  B2C5               	btfsc	4037,1,c	;volatile
  2028  007C3E  D7FE               	goto	l538
  2029  007C40                     l541:
  2030  007C40  B2C5               	btfsc	4037,1,c	;volatile
  2031  007C42  D7FE               	goto	l541
  2032  007C44  B6A1               	btfsc	4001,3,c	;volatile
  2033  007C46  D01F               	goto	u2250
  2034  007C48  283D               	incf	EERandomRead@control,w,c
  2035  007C4A  EC07  F03D         	call	_WriteI2C
  2036  007C4E  0900               	iorlw	0
  2037  007C50  B4D8               	btfsc	status,2,c
  2038  007C52  D007               	goto	l545
  2039  007C54  84C5               	bsf	4037,2,c	;volatile
  2040  007C56                     l546:
  2041  007C56  B4C5               	btfsc	4037,2,c	;volatile
  2042  007C58  D7FE               	goto	l546
  2043  007C5A                     l2180:
  2044  007C5A  0EFF               	movlw	255
  2045  007C5C  6E3C               	movwf	?_EERandomRead+1,c
  2046  007C5E  0EFD               	movlw	253
  2047  007C60  D019               	goto	L1
  2048  007C62                     l545:
  2049  007C62  BCC5               	btfsc	4037,6,c	;volatile
  2050  007C64  D013               	goto	l549
  2051  007C66  86C5               	bsf	4037,3,c	;volatile
  2052  007C68                     l550:
  2053  007C68  B6C5               	btfsc	4037,3,c	;volatile
  2054  007C6A  D7FE               	goto	l550
  2055  007C6C  8AC5               	bsf	4037,5,c	;volatile
  2056  007C6E  88C5               	bsf	4037,4,c	;volatile
  2057  007C70                     l553:
  2058  007C70  B8C5               	btfsc	4037,4,c	;volatile
  2059  007C72  D7FE               	goto	l553
  2060  007C74                     l556:
  2061  007C74  B8C5               	btfsc	4037,4,c	;volatile
  2062  007C76  D7FE               	goto	l556
  2063  007C78  84C5               	bsf	4037,2,c	;volatile
  2064  007C7A                     l559:
  2065  007C7A  B4C5               	btfsc	4037,2,c	;volatile
  2066  007C7C  D7FE               	goto	l559
  2067  007C7E                     l562:
  2068  007C7E  B4C5               	btfsc	4037,2,c	;volatile
  2069  007C80  D7FE               	goto	l562
  2070  007C82  A6A1               	btfss	4001,3,c	;volatile
  2071  007C84  D014               	goto	l527
  2072  007C86                     u2250:
  2073  007C86  683B               	setf	?_EERandomRead,c
  2074  007C88  683C               	setf	?_EERandomRead+1,c
  2075  007C8A  D014               	goto	l526
  2076  007C8C                     l549:
  2077  007C8C  84C5               	bsf	4037,2,c	;volatile
  2078  007C8E                     l567:
  2079  007C8E  B4C5               	btfsc	4037,2,c	;volatile
  2080  007C90  D7FE               	goto	l567
  2081  007C92  D009               	goto	l2196
  2082  007C94                     L1:
  2083  007C94  6E3B               	movwf	?_EERandomRead,c
  2084  007C96  D00E               	goto	l526
  2085  007C98                     l537:
  2086  007C98  84C5               	bsf	4037,2,c	;volatile
  2087  007C9A                     l571:
  2088  007C9A  B4C5               	btfsc	4037,2,c	;volatile
  2089  007C9C  D7FE               	goto	l571
  2090  007C9E  D003               	goto	l2196
  2091  007CA0                     l532:
  2092  007CA0  84C5               	bsf	4037,2,c	;volatile
  2093  007CA2                     l575:
  2094  007CA2  B4C5               	btfsc	4037,2,c	;volatile
  2095  007CA4  D7FE               	goto	l575
  2096  007CA6                     l2196:
  2097  007CA6  0EFF               	movlw	255
  2098  007CA8  6E3C               	movwf	?_EERandomRead+1,c
  2099  007CAA  0EFE               	movlw	254
  2100  007CAC  D7F3               	goto	L1
  2101  007CAE                     l527:
  2102  007CAE  CFC9 F03B          	movff	4041,?_EERandomRead	;volatile
  2103  007CB2  6A3C               	clrf	?_EERandomRead+1,c
  2104  007CB4                     l526:
  2105  007CB4  0012               	return	
  2106  007CB6                     __end_of_EERandomRead:
  2107                           	opt stack 0
  2108                           tblptru	equ	0xFF8
  2109                           tblptrh	equ	0xFF7
  2110                           tblptrl	equ	0xFF6
  2111                           tablat	equ	0xFF5
  2112                           prodl	equ	0xFF3
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           postdec1	equ	0xFE5
  2116                           fsr1l	equ	0xFE1
  2117                           indf2	equ	0xFDF
  2118                           fsr2h	equ	0xFDA
  2119                           fsr2l	equ	0xFD9
  2120                           status	equ	0xFD8
  2121                           
  2122 ;; *************** function _EraseEEPROM *****************
  2123 ;; Defined at:
  2124 ;;		line 121 in file "eeprom.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  p               1    wreg     unsigned char 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  p               1   10[COMRAM] unsigned char 
  2129 ;;  n               1   12[COMRAM] unsigned char 
  2130 ;;  i               1   11[COMRAM] unsigned char 
  2131 ;;  j               1    9[COMRAM] unsigned char 
  2132 ;;  m               1    8[COMRAM] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;		None               void
  2135 ;; Registers used:
  2136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2142 ;;      Params:         0       0       0       0       0       0       0       0       0
  2143 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2145 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2146 ;;Total ram usage:        5 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    5
  2149 ;; This function calls:
  2150 ;;		_EEAckPolling
  2151 ;;		_EEByteWrite
  2152 ;;		_ReadBUF
  2153 ;;		_Select
  2154 ;;		_Write
  2155 ;;		_Write_str
  2156 ;; This function is called by:
  2157 ;;		_EEPROM_RUN
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text10
  2162  007CB6                     __ptext10:
  2163                           	opt stack 0
  2164  007CB6                     _EraseEEPROM:
  2165                           	opt stack 24
  2166                           
  2167                           ;incstack = 0
  2168                           ;EraseEEPROM@p stored from wreg
  2169  007CB6  6E42               	movwf	EraseEEPROM@p,c
  2170                           
  2171                           ;eeprom.c: 123: unsigned char n=0, m=0, i=0, j=0;
  2172  007CB8  0E00               	movlw	0
  2173  007CBA  6E44               	movwf	EraseEEPROM@n,c
  2174  007CBC  0E00               	movlw	0
  2175  007CBE  6E40               	movwf	EraseEEPROM@m,c
  2176  007CC0  0E00               	movlw	0
  2177  007CC2  6E43               	movwf	EraseEEPROM@i,c
  2178  007CC4  0E00               	movlw	0
  2179  007CC6  6E41               	movwf	EraseEEPROM@j,c
  2180                           
  2181                           ;eeprom.c: 124: if(p=='z')
  2182  007CC8  5042               	movf	EraseEEPROM@p,w,c
  2183  007CCA  0A7A               	xorlw	122
  2184  007CCC  B4D8               	btfsc	status,2,c
  2185  007CCE  D015               	goto	l2272
  2186  007CD0  D019               	goto	l2274
  2187  007CD2                     l2258:
  2188                           
  2189                           ;eeprom.c: 129: {
  2190                           ;eeprom.c: 130: EEByteWrite(0xA0, n, ' ');
  2191  007CD2  C044  F03B         	movff	EraseEEPROM@n,EEByteWrite@address
  2192  007CD6  0E20               	movlw	32
  2193  007CD8  6E3C               	movwf	EEByteWrite@data,c
  2194  007CDA  0EA0               	movlw	160
  2195  007CDC  EC3F  F03D         	call	_EEByteWrite
  2196                           
  2197                           ;eeprom.c: 131: ReadBUF();
  2198  007CE0  ECF9  F03A         	call	_ReadBUF	;wreg free
  2199                           
  2200                           ;eeprom.c: 132: EEAckPolling(0xA0);
  2201  007CE4  0EA0               	movlw	160
  2202  007CE6  EC09  F03C         	call	_EEAckPolling
  2203                           
  2204                           ;eeprom.c: 133: n++;
  2205  007CEA  2A44               	incf	EraseEEPROM@n,f,c
  2206                           
  2207                           ;eeprom.c: 134: i++;
  2208  007CEC  2A43               	incf	EraseEEPROM@i,f,c
  2209  007CEE                     l2268:
  2210  007CEE  5043               	movf	EraseEEPROM@i,w,c
  2211  007CF0  0A10               	xorlw	16
  2212  007CF2  A4D8               	btfss	status,2,c
  2213  007CF4  D7EE               	goto	l2258
  2214                           
  2215                           ;eeprom.c: 135: }
  2216                           ;eeprom.c: 136: i=0;
  2217  007CF6  0E00               	movlw	0
  2218  007CF8  6E43               	movwf	EraseEEPROM@i,c
  2219  007CFA                     l2272:
  2220  007CFA  5044               	movf	EraseEEPROM@n,w,c
  2221  007CFC  0A80               	xorlw	128
  2222  007CFE  B4D8               	btfsc	status,2,c
  2223  007D00  D04F               	goto	l161
  2224  007D02  D7F5               	goto	l2268
  2225  007D04                     l2274:
  2226                           
  2227                           ;eeprom.c: 139: else if(p=='x')
  2228  007D04  5042               	movf	EraseEEPROM@p,w,c
  2229  007D06  0A78               	xorlw	120
  2230  007D08  A4D8               	btfss	status,2,c
  2231  007D0A  D04A               	goto	l161
  2232                           
  2233                           ;eeprom.c: 140: {
  2234                           ;eeprom.c: 141: Write_str(s_2);
  2235  007D0C  0100               	movlb	0	; () banked
  2236  007D0E  0E00               	movlw	high _s_2
  2237  007D10  6E3C               	movwf	Write_str@str+1,c
  2238  007D12  0100               	movlb	0	; () banked
  2239  007D14  0E99               	movlw	low _s_2
  2240  007D16  6E3B               	movwf	Write_str@str,c
  2241  007D18  EC34  F03B         	call	_Write_str	;wreg free
  2242                           
  2243                           ;eeprom.c: 142: n=Select('n',1,8);
  2244  007D1C  0E01               	movlw	1
  2245  007D1E  6E3D               	movwf	Select@range_1,c
  2246  007D20  0E08               	movlw	8
  2247  007D22  6E3E               	movwf	Select@range_2,c
  2248  007D24  0E6E               	movlw	110
  2249  007D26  EC39  F03C         	call	_Select
  2250  007D2A  6E44               	movwf	EraseEEPROM@n,c
  2251                           
  2252                           ;eeprom.c: 143: Write_str(s_3);
  2253  007D2C  0100               	movlb	0	; () banked
  2254  007D2E  0E00               	movlw	high _s_3
  2255  007D30  6E3C               	movwf	Write_str@str+1,c
  2256  007D32  0100               	movlb	0	; () banked
  2257  007D34  0EB8               	movlw	low _s_3
  2258  007D36  6E3B               	movwf	Write_str@str,c
  2259  007D38  EC34  F03B         	call	_Write_str	;wreg free
  2260                           
  2261                           ;eeprom.c: 144: Write((8-(n-1))+'0');
  2262  007D3C  0444               	decf	EraseEEPROM@n,w,c
  2263  007D3E  0800               	sublw	0
  2264  007D40  0F38               	addlw	56
  2265  007D42  EC0C  F03B         	call	_Write
  2266                           
  2267                           ;eeprom.c: 145: Write(')');
  2268  007D46  0E29               	movlw	41
  2269  007D48  EC0C  F03B         	call	_Write
  2270                           
  2271                           ;eeprom.c: 146: m=Select('n',1,8-(n-1));
  2272  007D4C  0E01               	movlw	1
  2273  007D4E  6E3D               	movwf	Select@range_1,c
  2274  007D50  0444               	decf	EraseEEPROM@n,w,c
  2275  007D52  0800               	sublw	0
  2276  007D54  0F08               	addlw	8
  2277  007D56  6E3E               	movwf	Select@range_2,c
  2278  007D58  0E6E               	movlw	110
  2279  007D5A  EC39  F03C         	call	_Select
  2280  007D5E  6E40               	movwf	EraseEEPROM@m,c
  2281                           
  2282                           ;eeprom.c: 147: n--;
  2283  007D60  0644               	decf	EraseEEPROM@n,f,c
  2284                           
  2285                           ;eeprom.c: 148: n=n*16;
  2286  007D62  5044               	movf	EraseEEPROM@n,w,c
  2287  007D64  0D10               	mullw	16
  2288  007D66  CFF3 F044          	movff	prodl,EraseEEPROM@n
  2289                           
  2290                           ;eeprom.c: 149: j=0;
  2291  007D6A  0E00               	movlw	0
  2292  007D6C  6E41               	movwf	EraseEEPROM@j,c
  2293                           
  2294                           ;eeprom.c: 150: while(j!=m)
  2295  007D6E  D015               	goto	l2306
  2296  007D70                     l2290:
  2297                           
  2298                           ;eeprom.c: 153: {
  2299                           ;eeprom.c: 154: EEByteWrite(0xA0, n, ' ');
  2300  007D70  C044  F03B         	movff	EraseEEPROM@n,EEByteWrite@address
  2301  007D74  0E20               	movlw	32
  2302  007D76  6E3C               	movwf	EEByteWrite@data,c
  2303  007D78  0EA0               	movlw	160
  2304  007D7A  EC3F  F03D         	call	_EEByteWrite
  2305                           
  2306                           ;eeprom.c: 155: ReadBUF();
  2307  007D7E  ECF9  F03A         	call	_ReadBUF	;wreg free
  2308                           
  2309                           ;eeprom.c: 156: EEAckPolling(0xA0);
  2310  007D82  0EA0               	movlw	160
  2311  007D84  EC09  F03C         	call	_EEAckPolling
  2312                           
  2313                           ;eeprom.c: 157: i++;
  2314  007D88  2A43               	incf	EraseEEPROM@i,f,c
  2315                           
  2316                           ;eeprom.c: 158: n++;
  2317  007D8A  2A44               	incf	EraseEEPROM@n,f,c
  2318  007D8C                     l2300:
  2319  007D8C  5043               	movf	EraseEEPROM@i,w,c
  2320  007D8E  0A10               	xorlw	16
  2321  007D90  A4D8               	btfss	status,2,c
  2322  007D92  D7EE               	goto	l2290
  2323                           
  2324                           ;eeprom.c: 159: }
  2325                           ;eeprom.c: 160: i = 0;
  2326  007D94  0E00               	movlw	0
  2327  007D96  6E43               	movwf	EraseEEPROM@i,c
  2328                           
  2329                           ;eeprom.c: 161: j++;
  2330  007D98  2A41               	incf	EraseEEPROM@j,f,c
  2331  007D9A                     l2306:
  2332  007D9A  5040               	movf	EraseEEPROM@m,w,c
  2333  007D9C  6241               	cpfseq	EraseEEPROM@j,c
  2334  007D9E  D7F6               	goto	l2300
  2335  007DA0                     l161:
  2336  007DA0  0012               	return	
  2337  007DA2                     __end_of_EraseEEPROM:
  2338                           	opt stack 0
  2339                           tblptru	equ	0xFF8
  2340                           tblptrh	equ	0xFF7
  2341                           tblptrl	equ	0xFF6
  2342                           tablat	equ	0xFF5
  2343                           prodl	equ	0xFF3
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           postdec1	equ	0xFE5
  2347                           fsr1l	equ	0xFE1
  2348                           indf2	equ	0xFDF
  2349                           fsr2h	equ	0xFDA
  2350                           fsr2l	equ	0xFD9
  2351                           status	equ	0xFD8
  2352                           
  2353 ;; *************** function _Select *****************
  2354 ;; Defined at:
  2355 ;;		line 64 in file "eeprom.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  sign            1    wreg     unsigned char 
  2358 ;;  range_1         1    5[COMRAM] unsigned char 
  2359 ;;  range_2         1    6[COMRAM] unsigned char 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  sign            1    7[COMRAM] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      unsigned char 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2371 ;;      Params:         2       0       0       0       0       0       0       0       0
  2372 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2374 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2375 ;;Total ram usage:        3 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    4
  2378 ;; This function calls:
  2379 ;;		_NewLINE
  2380 ;;		_ReadUART
  2381 ;;		_Write
  2382 ;;		_Write_str
  2383 ;; This function is called by:
  2384 ;;		_EraseEEPROM
  2385 ;;		_WriteEEPROM_DATA
  2386 ;;		_EEPROM_RUN
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text11
  2391  007872                     __ptext11:
  2392                           	opt stack 0
  2393  007872                     _Select:
  2394                           	opt stack 24
  2395                           
  2396                           ;incstack = 0
  2397                           ;Select@sign stored from wreg
  2398  007872  6E3F               	movwf	Select@sign,c
  2399                           
  2400                           ;eeprom.c: 66: NewLINE();
  2401  007874  ECFE  F03A         	call	_NewLINE	;wreg free
  2402                           
  2403                           ;eeprom.c: 67: if(sign=='n')
  2404  007878  503F               	movf	Select@sign,w,c
  2405  00787A  0A6E               	xorlw	110
  2406  00787C  A4D8               	btfss	status,2,c
  2407  00787E  D020               	goto	l2120
  2408  007880                     l2104:
  2409                           
  2410                           ;eeprom.c: 70: {
  2411                           ;eeprom.c: 71: c = ReadUART();
  2412  007880  EC05  F03B         	call	_ReadUART	;wreg free
  2413  007884  6E4C               	movwf	_c,c
  2414                           
  2415                           ;eeprom.c: 72: Write(c);
  2416  007886  504C               	movf	_c,w,c
  2417  007888  EC0C  F03B         	call	_Write
  2418                           
  2419                           ;eeprom.c: 73: c = c - '0';
  2420  00788C  504C               	movf	_c,w,c
  2421  00788E  0FD0               	addlw	208
  2422  007890  6E4C               	movwf	_c,c
  2423                           
  2424                           ;eeprom.c: 74: if(!((c>=range_1)&&(c<=range_2)))
  2425  007892  503D               	movf	Select@range_1,w,c
  2426  007894  5C4C               	subwf	_c,w,c
  2427  007896  A0D8               	btfss	status,0,c
  2428  007898  D004               	goto	l2114
  2429  00789A  504C               	movf	_c,w,c
  2430  00789C  5C3E               	subwf	Select@range_2,w,c
  2431  00789E  B0D8               	btfsc	status,0,c
  2432  0078A0  D006               	goto	l2116
  2433  0078A2                     l2114:
  2434                           
  2435                           ;eeprom.c: 75: Write_str(s_1);
  2436  0078A2  0E00               	movlw	high _s_1
  2437  0078A4  6E3C               	movwf	Write_str@str+1,c
  2438  0078A6  0E19               	movlw	low _s_1
  2439  0078A8  6E3B               	movwf	Write_str@str,c
  2440  0078AA  EC34  F03B         	call	_Write_str	;wreg free
  2441  0078AE                     l2116:
  2442                           
  2443                           ;eeprom.c: 76: }while(!((c>=range_1)&&(c<=range_2)));
  2444  0078AE  503D               	movf	Select@range_1,w,c
  2445  0078B0  5C4C               	subwf	_c,w,c
  2446  0078B2  A0D8               	btfss	status,0,c
  2447  0078B4  D7E5               	goto	l2104
  2448  0078B6  504C               	movf	_c,w,c
  2449  0078B8  5C3E               	subwf	Select@range_2,w,c
  2450  0078BA  B0D8               	btfsc	status,0,c
  2451  0078BC  D007               	goto	l2124
  2452  0078BE  D7E0               	goto	l2104
  2453  0078C0                     l2120:
  2454                           
  2455                           ;eeprom.c: 78: else
  2456                           ;eeprom.c: 79: {
  2457                           ;eeprom.c: 80: c = ReadUART();
  2458  0078C0  EC05  F03B         	call	_ReadUART	;wreg free
  2459  0078C4  6E4C               	movwf	_c,c
  2460                           
  2461                           ;eeprom.c: 81: Write(c);
  2462  0078C6  504C               	movf	_c,w,c
  2463  0078C8  EC0C  F03B         	call	_Write
  2464  0078CC                     l2124:
  2465                           
  2466                           ;eeprom.c: 82: }
  2467                           ;eeprom.c: 83: NewLINE();
  2468  0078CC  ECFE  F03A         	call	_NewLINE	;wreg free
  2469                           
  2470                           ;eeprom.c: 84: return(c);
  2471  0078D0  504C               	movf	_c,w,c
  2472  0078D2  0012               	return	
  2473  0078D4                     __end_of_Select:
  2474                           	opt stack 0
  2475                           tblptru	equ	0xFF8
  2476                           tblptrh	equ	0xFF7
  2477                           tblptrl	equ	0xFF6
  2478                           tablat	equ	0xFF5
  2479                           prodl	equ	0xFF3
  2480                           postinc0	equ	0xFEE
  2481                           wreg	equ	0xFE8
  2482                           postdec1	equ	0xFE5
  2483                           fsr1l	equ	0xFE1
  2484                           indf2	equ	0xFDF
  2485                           fsr2h	equ	0xFDA
  2486                           fsr2l	equ	0xFD9
  2487                           status	equ	0xFD8
  2488                           
  2489 ;; *************** function _Write *****************
  2490 ;; Defined at:
  2491 ;;		line 47 in file "uart.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  data            1    wreg     unsigned char 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  data            1    1[COMRAM] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2505 ;;      Params:         0       0       0       0       0       0       0       0       0
  2506 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2508 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2509 ;;Total ram usage:        1 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    1
  2512 ;; This function calls:
  2513 ;;		_WriteUSART
  2514 ;; This function is called by:
  2515 ;;		_Select
  2516 ;;		_EraseEEPROM
  2517 ;;		_WriteEEPROM_DATA
  2518 ;;		_EEPROM_RUN
  2519 ;;		_Read_string
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text12
  2524  007618                     __ptext12:
  2525                           	opt stack 0
  2526  007618                     _Write:
  2527                           	opt stack 27
  2528                           
  2529                           ;incstack = 0
  2530                           ;Write@data stored from wreg
  2531  007618  6E39               	movwf	Write@data,c
  2532                           
  2533                           ;uart.c: 49: WriteUSART(data);
  2534  00761A  5039               	movf	Write@data,w,c
  2535  00761C  EC2B  F03B         	call	_WriteUSART
  2536  007620                     l251:
  2537  007620  B2AC               	btfsc	4012,1,c	;volatile
  2538  007622  0012               	return	
  2539  007624  D7FD               	goto	l251
  2540  007626                     __end_of_Write:
  2541                           	opt stack 0
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           prodl	equ	0xFF3
  2547                           postinc0	equ	0xFEE
  2548                           wreg	equ	0xFE8
  2549                           postdec1	equ	0xFE5
  2550                           fsr1l	equ	0xFE1
  2551                           indf2	equ	0xFDF
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _ReadUART *****************
  2557 ;; Defined at:
  2558 ;;		line 25 in file "uart.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  c               1    1[COMRAM] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      unsigned char 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2572 ;;      Params:         0       0       0       0       0       0       0       0       0
  2573 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2575 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2576 ;;Total ram usage:        1 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    1
  2579 ;; This function calls:
  2580 ;;		_ReadUSART
  2581 ;; This function is called by:
  2582 ;;		_Select
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text13
  2587  00760A                     __ptext13:
  2588                           	opt stack 0
  2589  00760A                     _ReadUART:
  2590                           	opt stack 26
  2591  00760A                     l233:
  2592  00760A  AA9E               	btfss	3998,5,c	;volatile
  2593  00760C  D7FE               	goto	l233
  2594                           
  2595                           ;uart.c: 29: c = ReadUSART();
  2596  00760E  EC73  F03B         	call	_ReadUSART	;wreg free
  2597  007612  6E39               	movwf	ReadUART@c,c
  2598                           
  2599                           ;uart.c: 31: return(c);
  2600  007614  5039               	movf	ReadUART@c,w,c
  2601  007616  0012               	return	
  2602  007618                     __end_of_ReadUART:
  2603                           	opt stack 0
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           prodl	equ	0xFF3
  2609                           postinc0	equ	0xFEE
  2610                           wreg	equ	0xFE8
  2611                           postdec1	equ	0xFE5
  2612                           fsr1l	equ	0xFE1
  2613                           indf2	equ	0xFDF
  2614                           fsr2h	equ	0xFDA
  2615                           fsr2l	equ	0xFD9
  2616                           status	equ	0xFD8
  2617                           
  2618 ;; *************** function _ReadUSART *****************
  2619 ;; Defined at:
  2620 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  data            1    0[COMRAM] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      unsigned char 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0
  2635 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2637 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2638 ;;Total ram usage:        1 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_ReadUART
  2644 ;;		_Read_str_
  2645 ;;		_Read_string
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text14
  2650  0076E6                     __ptext14:
  2651                           	opt stack 0
  2652  0076E6                     _ReadUSART:
  2653                           	opt stack 26
  2654                           
  2655                           ;incstack = 0
  2656  0076E6  0EF2               	movlw	242
  2657  0076E8  164B               	andwf	_USART_Status,f,c
  2658  0076EA  ACAB               	btfss	4011,6,c	;volatile
  2659  0076EC  D003               	goto	l394
  2660  0076EE  904B               	bcf	_USART_Status,0,c
  2661  0076F0  B0AB               	btfsc	4011,0,c	;volatile
  2662  0076F2  804B               	bsf	_USART_Status,0,c
  2663  0076F4                     l394:
  2664  0076F4  B4AB               	btfsc	4011,2,c	;volatile
  2665  0076F6  844B               	bsf	_USART_Status,2,c
  2666  0076F8  B2AB               	btfsc	4011,1,c	;volatile
  2667  0076FA  864B               	bsf	_USART_Status,3,c
  2668  0076FC  CFAE F038          	movff	4014,ReadUSART@data	;volatile
  2669  007700  5038               	movf	ReadUSART@data,w,c
  2670  007702  0012               	return	
  2671  007704                     __end_of_ReadUSART:
  2672                           	opt stack 0
  2673                           tblptru	equ	0xFF8
  2674                           tblptrh	equ	0xFF7
  2675                           tblptrl	equ	0xFF6
  2676                           tablat	equ	0xFF5
  2677                           prodl	equ	0xFF3
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           postdec1	equ	0xFE5
  2681                           fsr1l	equ	0xFE1
  2682                           indf2	equ	0xFDF
  2683                           fsr2h	equ	0xFDA
  2684                           fsr2l	equ	0xFD9
  2685                           status	equ	0xFD8
  2686                           
  2687 ;; *************** function _NewLINE *****************
  2688 ;; Defined at:
  2689 ;;		line 59 in file "eeprom.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;		None
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2703 ;;      Params:         0       0       0       0       0       0       0       0       0
  2704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2706 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2707 ;;Total ram usage:        0 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    3
  2710 ;; This function calls:
  2711 ;;		_Write_str
  2712 ;; This function is called by:
  2713 ;;		_Select
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text15
  2718  0075FC                     __ptext15:
  2719                           	opt stack 0
  2720  0075FC                     _NewLINE:
  2721                           	opt stack 24
  2722                           
  2723                           ;eeprom.c: 61: Write_str(new_ln);
  2724                           
  2725                           ;incstack = 0
  2726  0075FC  0E00               	movlw	high _new_ln
  2727  0075FE  6E3C               	movwf	Write_str@str+1,c
  2728  007600  0E35               	movlw	low _new_ln
  2729  007602  6E3B               	movwf	Write_str@str,c
  2730  007604  EC34  F03B         	call	_Write_str	;wreg free
  2731  007608  0012               	return	
  2732  00760A                     __end_of_NewLINE:
  2733                           	opt stack 0
  2734                           tblptru	equ	0xFF8
  2735                           tblptrh	equ	0xFF7
  2736                           tblptrl	equ	0xFF6
  2737                           tablat	equ	0xFF5
  2738                           prodl	equ	0xFF3
  2739                           postinc0	equ	0xFEE
  2740                           wreg	equ	0xFE8
  2741                           postdec1	equ	0xFE5
  2742                           fsr1l	equ	0xFE1
  2743                           indf2	equ	0xFDF
  2744                           fsr2h	equ	0xFDA
  2745                           fsr2l	equ	0xFD9
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function _Write_str *****************
  2749 ;; Defined at:
  2750 ;;		line 35 in file "uart.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  str             2    3[COMRAM] PTR unsigned char 
  2753 ;;		 -> s_10(88), s_9(11), s_8(10), s_11(46), 
  2754 ;;		 -> s_7(12), s_6(8), str(33), s_3(23), 
  2755 ;;		 -> s_2(31), s_1(10), new_ln(3), 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;		None
  2758 ;; Return value:  Size  Location     Type
  2759 ;;		None               void
  2760 ;; Registers used:
  2761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2767 ;;      Params:         2       0       0       0       0       0       0       0       0
  2768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2770 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2771 ;;Total ram usage:        2 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    2
  2774 ;; This function calls:
  2775 ;;		_putsUSART
  2776 ;; This function is called by:
  2777 ;;		_NewLINE
  2778 ;;		_Select
  2779 ;;		_EraseEEPROM
  2780 ;;		_WriteEEPROM_DATA
  2781 ;;		_EEPROM_RUN
  2782 ;;		_ReadEEPROM_DATA
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text16
  2787  007668                     __ptext16:
  2788                           	opt stack 0
  2789  007668                     _Write_str:
  2790                           	opt stack 27
  2791                           
  2792                           ;uart.c: 37: putsUSART((char *)str);
  2793                           
  2794                           ;incstack = 0
  2795  007668  C03C  F03A         	movff	Write_str@str+1,putsUSART@data+1
  2796  00766C  C03B  F039         	movff	Write_str@str,putsUSART@data
  2797  007670  EC82  F03B         	call	_putsUSART	;wreg free
  2798  007674                     l239:
  2799  007674  B2AC               	btfsc	4012,1,c	;volatile
  2800  007676  0012               	return	
  2801  007678  D7FD               	goto	l239
  2802  00767A                     __end_of_Write_str:
  2803                           	opt stack 0
  2804                           tblptru	equ	0xFF8
  2805                           tblptrh	equ	0xFF7
  2806                           tblptrl	equ	0xFF6
  2807                           tablat	equ	0xFF5
  2808                           prodl	equ	0xFF3
  2809                           postinc0	equ	0xFEE
  2810                           wreg	equ	0xFE8
  2811                           postdec1	equ	0xFE5
  2812                           fsr1l	equ	0xFE1
  2813                           indf2	equ	0xFDF
  2814                           fsr2h	equ	0xFDA
  2815                           fsr2l	equ	0xFD9
  2816                           status	equ	0xFD8
  2817                           
  2818 ;; *************** function _putsUSART *****************
  2819 ;; Defined at:
  2820 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uputs.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  data            2    1[COMRAM] PTR unsigned char 
  2823 ;;		 -> s_10(88), s_9(11), s_8(10), s_11(46), 
  2824 ;;		 -> s_7(12), s_6(8), str(33), s_3(23), 
  2825 ;;		 -> s_2(31), s_1(10), new_ln(3), 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;		None               void
  2830 ;; Registers used:
  2831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2837 ;;      Params:         2       0       0       0       0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2840 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2841 ;;Total ram usage:        2 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    1
  2844 ;; This function calls:
  2845 ;;		_WriteUSART
  2846 ;; This function is called by:
  2847 ;;		_Write_str
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text17
  2852  007704                     __ptext17:
  2853                           	opt stack 0
  2854  007704                     _putsUSART:
  2855                           	opt stack 27
  2856  007704                     l381:
  2857  007704  A2AC               	btfss	4012,1,c	;volatile
  2858  007706  D7FE               	goto	l381
  2859  007708  C039  FFD9         	movff	putsUSART@data,fsr2l
  2860  00770C  C03A  FFDA         	movff	putsUSART@data+1,fsr2h
  2861  007710  50DF               	movf	indf2,w,c
  2862  007712  EC2B  F03B         	call	_WriteUSART
  2863  007716  C039  FFD9         	movff	putsUSART@data,fsr2l
  2864  00771A  C03A  FFDA         	movff	putsUSART@data+1,fsr2h
  2865  00771E  4A39               	infsnz	putsUSART@data,f,c
  2866  007720  2A3A               	incf	putsUSART@data+1,f,c
  2867  007722  50DF               	movf	indf2,w,c
  2868  007724  B4D8               	btfsc	status,2,c
  2869  007726  0012               	return	
  2870  007728  D7ED               	goto	l381
  2871  00772A                     __end_of_putsUSART:
  2872                           	opt stack 0
  2873                           tblptru	equ	0xFF8
  2874                           tblptrh	equ	0xFF7
  2875                           tblptrl	equ	0xFF6
  2876                           tablat	equ	0xFF5
  2877                           prodl	equ	0xFF3
  2878                           postinc0	equ	0xFEE
  2879                           wreg	equ	0xFE8
  2880                           postdec1	equ	0xFE5
  2881                           fsr1l	equ	0xFE1
  2882                           indf2	equ	0xFDF
  2883                           fsr2h	equ	0xFDA
  2884                           fsr2l	equ	0xFD9
  2885                           status	equ	0xFD8
  2886                           
  2887 ;; *************** function _WriteUSART *****************
  2888 ;; Defined at:
  2889 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  data            1    wreg     unsigned char 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  data            1    0[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;		None               void
  2896 ;; Registers used:
  2897 ;;		wreg
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0
  2904 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2906 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2907 ;;Total ram usage:        1 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_Write
  2913 ;;		_Read_str_
  2914 ;;		_putsUSART
  2915 ;;		_Read_string
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text18
  2920  007656                     __ptext18:
  2921                           	opt stack 0
  2922  007656                     _WriteUSART:
  2923                           	opt stack 27
  2924                           
  2925                           ;incstack = 0
  2926                           ;WriteUSART@data stored from wreg
  2927  007656  6E38               	movwf	WriteUSART@data,c
  2928  007658  ACAC               	btfss	4012,6,c	;volatile
  2929  00765A  D003               	goto	l1956
  2930  00765C  90AC               	bcf	4012,0,c	;volatile
  2931  00765E  B24B               	btfsc	_USART_Status,1,c
  2932  007660  80AC               	bsf	4012,0,c	;volatile
  2933  007662                     l1956:
  2934  007662  C038  FFAD         	movff	WriteUSART@data,4013	;volatile
  2935  007666  0012               	return	
  2936  007668                     __end_of_WriteUSART:
  2937                           	opt stack 0
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           prodl	equ	0xFF3
  2943                           postinc0	equ	0xFEE
  2944                           wreg	equ	0xFE8
  2945                           postdec1	equ	0xFE5
  2946                           fsr1l	equ	0xFE1
  2947                           indf2	equ	0xFDF
  2948                           fsr2h	equ	0xFDA
  2949                           fsr2l	equ	0xFD9
  2950                           status	equ	0xFD8
  2951                           
  2952 ;; *************** function _ReadBUF *****************
  2953 ;; Defined at:
  2954 ;;		line 23 in file "i2c_.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  c               1    0[COMRAM] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		None
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2968 ;;      Params:         0       0       0       0       0       0       0       0       0
  2969 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2971 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2972 ;;Total ram usage:        1 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_WriteEEPROM
  2978 ;;		_ReadEEPROM
  2979 ;;		_EraseEEPROM
  2980 ;;		_Write_I2C
  2981 ;;		_Read
  2982 ;;		_Read_From_Addr
  2983 ;;		_Write_to_Addr
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text19
  2988  0075F2                     __ptext19:
  2989                           	opt stack 0
  2990  0075F2                     _ReadBUF:
  2991                           	opt stack 27
  2992                           
  2993                           ;i2c_.c: 25: unsigned char c;
  2994                           ;i2c_.c: 26: c = SSPBUF;
  2995                           
  2996                           ;incstack = 0
  2997  0075F2  CFC9 F038          	movff	4041,ReadBUF@c	;volatile
  2998                           
  2999                           ;i2c_.c: 27: c = SSPBUF;
  3000  0075F6  CFC9 F038          	movff	4041,ReadBUF@c	;volatile
  3001  0075FA  0012               	return	
  3002  0075FC                     __end_of_ReadBUF:
  3003                           	opt stack 0
  3004                           tblptru	equ	0xFF8
  3005                           tblptrh	equ	0xFF7
  3006                           tblptrl	equ	0xFF6
  3007                           tablat	equ	0xFF5
  3008                           prodl	equ	0xFF3
  3009                           postinc0	equ	0xFEE
  3010                           wreg	equ	0xFE8
  3011                           postdec1	equ	0xFE5
  3012                           fsr1l	equ	0xFE1
  3013                           indf2	equ	0xFDF
  3014                           fsr2h	equ	0xFDA
  3015                           fsr2l	equ	0xFD9
  3016                           status	equ	0xFD8
  3017                           
  3018 ;; *************** function _EEByteWrite *****************
  3019 ;; Defined at:
  3020 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_eebw.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  control         1    wreg     unsigned char 
  3023 ;;  address         1    3[COMRAM] unsigned char 
  3024 ;;  data            1    4[COMRAM] unsigned char 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  control         1    5[COMRAM] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      char 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3036 ;;      Params:         2       0       0       0       0       0       0       0       0
  3037 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3039 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3040 ;;Total ram usage:        3 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    2
  3043 ;; This function calls:
  3044 ;;		_IdleI2C
  3045 ;;		_WriteI2C
  3046 ;; This function is called by:
  3047 ;;		_WriteEEPROM
  3048 ;;		_EraseEEPROM
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text20
  3053  007A7E                     __ptext20:
  3054                           	opt stack 0
  3055  007A7E                     _EEByteWrite:
  3056                           	opt stack 25
  3057                           
  3058                           ;incstack = 0
  3059                           ;EEByteWrite@control stored from wreg
  3060  007A7E  6E3D               	movwf	EEByteWrite@control,c
  3061  007A80  EC1B  F03B         	call	_IdleI2C	;wreg free
  3062  007A84  80C5               	bsf	4037,0,c	;volatile
  3063  007A86                     l469:
  3064  007A86  B0C5               	btfsc	4037,0,c	;volatile
  3065  007A88  D7FE               	goto	l469
  3066  007A8A                     l472:
  3067  007A8A  B0C5               	btfsc	4037,0,c	;volatile
  3068  007A8C  D7FE               	goto	l472
  3069  007A8E  B6A1               	btfsc	4001,3,c	;volatile
  3070  007A90  D030               	goto	l476
  3071                           
  3072                           ;	Return value of _EEByteWrite is never used
  3073  007A92  503D               	movf	EEByteWrite@control,w,c
  3074  007A94  EC07  F03D         	call	_WriteI2C
  3075  007A98  0900               	iorlw	0
  3076  007A9A  B4D8               	btfsc	status,2,c
  3077  007A9C  D004               	goto	l478
  3078  007A9E  84C5               	bsf	4037,2,c	;volatile
  3079  007AA0                     l479:
  3080  007AA0  A4C5               	btfss	4037,2,c	;volatile
  3081  007AA2  D027               	goto	l476
  3082  007AA4  D7FD               	goto	l479
  3083  007AA6                     l478:
  3084  007AA6  BCC5               	btfsc	4037,6,c	;volatile
  3085  007AA8  D01A               	goto	l482
  3086  007AAA  503B               	movf	EEByteWrite@address,w,c
  3087  007AAC  EC07  F03D         	call	_WriteI2C
  3088  007AB0  0900               	iorlw	0
  3089  007AB2  B4D8               	btfsc	status,2,c
  3090  007AB4  D004               	goto	l483
  3091  007AB6  84C5               	bsf	4037,2,c	;volatile
  3092  007AB8                     l484:
  3093  007AB8  A4C5               	btfss	4037,2,c	;volatile
  3094  007ABA  D01B               	goto	l476
  3095  007ABC  D7FD               	goto	l484
  3096  007ABE                     l483:
  3097  007ABE  BCC5               	btfsc	4037,6,c	;volatile
  3098  007AC0  D00A               	goto	l487
  3099  007AC2  503C               	movf	EEByteWrite@data,w,c
  3100  007AC4  EC07  F03D         	call	_WriteI2C
  3101  007AC8  0900               	iorlw	0
  3102  007ACA  B4D8               	btfsc	status,2,c
  3103  007ACC  D00C               	goto	l477
  3104  007ACE  84C5               	bsf	4037,2,c	;volatile
  3105  007AD0                     l489:
  3106  007AD0  A4C5               	btfss	4037,2,c	;volatile
  3107  007AD2  D00F               	goto	l476
  3108  007AD4  D7FD               	goto	l489
  3109  007AD6                     l487:
  3110  007AD6  84C5               	bsf	4037,2,c	;volatile
  3111  007AD8                     l493:
  3112  007AD8  A4C5               	btfss	4037,2,c	;volatile
  3113  007ADA  D00B               	goto	l476
  3114  007ADC  D7FD               	goto	l493
  3115  007ADE                     l482:
  3116  007ADE  84C5               	bsf	4037,2,c	;volatile
  3117  007AE0                     l497:
  3118  007AE0  A4C5               	btfss	4037,2,c	;volatile
  3119  007AE2  D007               	goto	l476
  3120  007AE4  D7FD               	goto	l497
  3121  007AE6                     l477:
  3122  007AE6  84C5               	bsf	4037,2,c	;volatile
  3123  007AE8                     l500:
  3124  007AE8  B4C5               	btfsc	4037,2,c	;volatile
  3125  007AEA  D7FE               	goto	l500
  3126  007AEC                     l503:
  3127  007AEC  B4C5               	btfsc	4037,2,c	;volatile
  3128  007AEE  D7FE               	goto	l503
  3129  007AF0  50A1               	movf	4001,w,c	;volatile
  3130  007AF2                     l476:
  3131  007AF2  0012               	return	
  3132  007AF4                     __end_of_EEByteWrite:
  3133                           	opt stack 0
  3134                           tblptru	equ	0xFF8
  3135                           tblptrh	equ	0xFF7
  3136                           tblptrl	equ	0xFF6
  3137                           tablat	equ	0xFF5
  3138                           prodl	equ	0xFF3
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           postdec1	equ	0xFE5
  3142                           fsr1l	equ	0xFE1
  3143                           indf2	equ	0xFDF
  3144                           fsr2h	equ	0xFDA
  3145                           fsr2l	equ	0xFD9
  3146                           status	equ	0xFD8
  3147                           
  3148 ;; *************** function _EEAckPolling *****************
  3149 ;; Defined at:
  3150 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_eeap.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  control         1    wreg     unsigned char 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  control         1    4[COMRAM] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      char 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0
  3165 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3166 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3167 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        2 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    2
  3171 ;; This function calls:
  3172 ;;		_IdleI2C
  3173 ;;		_WriteI2C
  3174 ;; This function is called by:
  3175 ;;		_WriteEEPROM
  3176 ;;		_EraseEEPROM
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text21
  3181  007812                     __ptext21:
  3182                           	opt stack 0
  3183  007812                     _EEAckPolling:
  3184                           	opt stack 25
  3185                           
  3186                           ;incstack = 0
  3187                           ;EEAckPolling@control stored from wreg
  3188  007812  6E3C               	movwf	EEAckPolling@control,c
  3189  007814  EC1B  F03B         	call	_IdleI2C	;wreg free
  3190  007818  80C5               	bsf	4037,0,c	;volatile
  3191  00781A                     l425:
  3192  00781A  B0C5               	btfsc	4037,0,c	;volatile
  3193  00781C  D7FE               	goto	l425
  3194  00781E                     l428:
  3195  00781E  B0C5               	btfsc	4037,0,c	;volatile
  3196  007820  D7FE               	goto	l428
  3197  007822  B6A1               	btfsc	4001,3,c	;volatile
  3198  007824  D025               	goto	l432
  3199                           
  3200                           ;	Return value of _EEAckPolling is never used
  3201  007826  503C               	movf	EEAckPolling@control,w,c
  3202  007828  EC07  F03D         	call	_WriteI2C
  3203  00782C  6E3B               	movwf	??_EEAckPolling& (0+255),c
  3204  00782E  283B               	incf	??_EEAckPolling,w,c
  3205  007830  A4D8               	btfss	status,2,c
  3206  007832  D016               	goto	l438
  3207  007834  84C5               	bsf	4037,2,c	;volatile
  3208  007836                     l435:
  3209  007836  A4C5               	btfss	4037,2,c	;volatile
  3210  007838  D01B               	goto	l432
  3211  00783A  D7FD               	goto	l435
  3212  00783C                     l439:
  3213  00783C  82C5               	bsf	4037,1,c	;volatile
  3214  00783E                     l440:
  3215  00783E  B2C5               	btfsc	4037,1,c	;volatile
  3216  007840  D7FE               	goto	l440
  3217  007842                     l443:
  3218  007842  B2C5               	btfsc	4037,1,c	;volatile
  3219  007844  D7FE               	goto	l443
  3220  007846  B6A1               	btfsc	4001,3,c	;volatile
  3221  007848  D013               	goto	l432
  3222                           
  3223                           ;	Return value of _EEAckPolling is never used
  3224  00784A  503C               	movf	EEAckPolling@control,w,c
  3225  00784C  EC07  F03D         	call	_WriteI2C
  3226  007850  6E3B               	movwf	??_EEAckPolling& (0+255),c
  3227  007852  283B               	incf	??_EEAckPolling,w,c
  3228  007854  A4D8               	btfss	status,2,c
  3229  007856  D004               	goto	l438
  3230  007858  84C5               	bsf	4037,2,c	;volatile
  3231  00785A                     l448:
  3232  00785A  A4C5               	btfss	4037,2,c	;volatile
  3233  00785C  D009               	goto	l432
  3234  00785E  D7FD               	goto	l448
  3235  007860                     l438:
  3236  007860  BCC5               	btfsc	4037,6,c	;volatile
  3237  007862  D7EC               	goto	l439
  3238  007864  84C5               	bsf	4037,2,c	;volatile
  3239  007866                     l452:
  3240  007866  B4C5               	btfsc	4037,2,c	;volatile
  3241  007868  D7FE               	goto	l452
  3242  00786A                     l455:
  3243  00786A  B4C5               	btfsc	4037,2,c	;volatile
  3244  00786C  D7FE               	goto	l455
  3245  00786E  50A1               	movf	4001,w,c	;volatile
  3246  007870                     l432:
  3247  007870  0012               	return	
  3248  007872                     __end_of_EEAckPolling:
  3249                           	opt stack 0
  3250                           tblptru	equ	0xFF8
  3251                           tblptrh	equ	0xFF7
  3252                           tblptrl	equ	0xFF6
  3253                           tablat	equ	0xFF5
  3254                           prodl	equ	0xFF3
  3255                           postinc0	equ	0xFEE
  3256                           wreg	equ	0xFE8
  3257                           postdec1	equ	0xFE5
  3258                           fsr1l	equ	0xFE1
  3259                           indf2	equ	0xFDF
  3260                           fsr2h	equ	0xFDA
  3261                           fsr2l	equ	0xFD9
  3262                           status	equ	0xFD8
  3263                           
  3264 ;; *************** function _WriteI2C *****************
  3265 ;; Defined at:
  3266 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_writ.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  data_out        1    wreg     unsigned char 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  data_out        1    2[COMRAM] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      char 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0
  3281 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3282 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3283 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3284 ;;Total ram usage:        2 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    1
  3287 ;; This function calls:
  3288 ;;		_IdleI2C
  3289 ;; This function is called by:
  3290 ;;		_EEAckPolling
  3291 ;;		_EEByteWrite
  3292 ;;		_EERandomRead
  3293 ;;		_Write_I2C
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text22
  3298  007A0E                     __ptext22:
  3299                           	opt stack 0
  3300  007A0E                     _WriteI2C:
  3301                           	opt stack 25
  3302                           
  3303                           ;incstack = 0
  3304                           ;WriteI2C@data_out stored from wreg
  3305  007A0E  6E3A               	movwf	WriteI2C@data_out,c
  3306  007A10  C03A  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  3307  007A14  AEC6               	btfss	4038,7,c	;volatile
  3308  007A16  D002               	goto	l1996
  3309  007A18  0EFF               	movlw	255
  3310  007A1A  D030               	goto	l633
  3311  007A1C                     l1996:
  3312  007A1C  CFC6 F039          	movff	4038,??_WriteI2C	;volatile
  3313  007A20  0E0F               	movlw	15
  3314  007A22  1639               	andwf	??_WriteI2C,f,c
  3315  007A24  5039               	movf	??_WriteI2C,w,c
  3316  007A26  0A08               	xorlw	8
  3317  007A28  B4D8               	btfsc	status,2,c
  3318  007A2A  D00F               	goto	l2014
  3319  007A2C  CFC6 F039          	movff	4038,??_WriteI2C	;volatile
  3320  007A30  0E0F               	movlw	15
  3321  007A32  1639               	andwf	??_WriteI2C,f,c
  3322  007A34  5039               	movf	??_WriteI2C,w,c
  3323  007A36  0A0B               	xorlw	11
  3324  007A38  B4D8               	btfsc	status,2,c
  3325  007A3A  D007               	goto	l2014
  3326  007A3C  88C6               	bsf	4038,4,c	;volatile
  3327  007A3E                     l636:
  3328  007A3E  A69E               	btfss	3998,3,c	;volatile
  3329  007A40  D7FE               	goto	l636
  3330  007A42  A4C7               	btfss	4039,2,c	;volatile
  3331  007A44  B0C7               	btfsc	4039,0,c	;volatile
  3332  007A46  D019               	goto	l2028
  3333  007A48  D016               	goto	u1660
  3334  007A4A                     l2014:
  3335  007A4A  CFC6 F039          	movff	4038,??_WriteI2C	;volatile
  3336  007A4E  0E0F               	movlw	15
  3337  007A50  1639               	andwf	??_WriteI2C,f,c
  3338  007A52  5039               	movf	??_WriteI2C,w,c
  3339  007A54  0A08               	xorlw	8
  3340  007A56  B4D8               	btfsc	status,2,c
  3341  007A58  D008               	goto	l645
  3342  007A5A  CFC6 F039          	movff	4038,??_WriteI2C	;volatile
  3343  007A5E  0E0F               	movlw	15
  3344  007A60  1639               	andwf	??_WriteI2C,f,c
  3345  007A62  5039               	movf	??_WriteI2C,w,c
  3346  007A64  0A0B               	xorlw	11
  3347  007A66  A4D8               	btfss	status,2,c
  3348  007A68  D009               	goto	l633
  3349  007A6A                     l645:
  3350  007A6A  B0C7               	btfsc	4039,0,c	;volatile
  3351  007A6C  D7FE               	goto	l645
  3352  007A6E  EC1B  F03B         	call	_IdleI2C	;wreg free
  3353  007A72  ACC5               	btfss	4037,6,c	;volatile
  3354  007A74  D002               	goto	l2028
  3355  007A76                     u1660:
  3356  007A76  0EFE               	movlw	254
  3357  007A78  D001               	goto	l633
  3358  007A7A                     l2028:
  3359  007A7A  0E00               	movlw	0
  3360  007A7C                     l633:
  3361  007A7C  0012               	return	
  3362  007A7E                     __end_of_WriteI2C:
  3363                           	opt stack 0
  3364                           tblptru	equ	0xFF8
  3365                           tblptrh	equ	0xFF7
  3366                           tblptrl	equ	0xFF6
  3367                           tablat	equ	0xFF5
  3368                           prodl	equ	0xFF3
  3369                           postinc0	equ	0xFEE
  3370                           wreg	equ	0xFE8
  3371                           postdec1	equ	0xFE5
  3372                           fsr1l	equ	0xFE1
  3373                           indf2	equ	0xFDF
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378 ;; *************** function _IdleI2C *****************
  3379 ;; Defined at:
  3380 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_idle.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;		None               void
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3396 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3397 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3398 ;;Total ram usage:        1 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_EEAckPolling
  3404 ;;		_EEByteWrite
  3405 ;;		_EERandomRead
  3406 ;;		_WriteI2C
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text23
  3411  007636                     __ptext23:
  3412                           	opt stack 0
  3413  007636                     _IdleI2C:
  3414                           	opt stack 25
  3415  007636                     l1964:
  3416  007636  CFC5 F038          	movff	4037,??_IdleI2C	;volatile
  3417  00763A  0E1F               	movlw	31
  3418  00763C  1638               	andwf	??_IdleI2C,f,c
  3419  00763E  B4D8               	btfsc	status,2,c
  3420  007640  B4C7               	btfsc	4039,2,c	;volatile
  3421  007642  D7F9               	goto	l1964
  3422  007644  0012               	return	
  3423  007646                     __end_of_IdleI2C:
  3424                           	opt stack 0
  3425                           tblptru	equ	0xFF8
  3426                           tblptrh	equ	0xFF7
  3427                           tblptrl	equ	0xFF6
  3428                           tablat	equ	0xFF5
  3429                           prodl	equ	0xFF3
  3430                           postinc0	equ	0xFEE
  3431                           wreg	equ	0xFE8
  3432                           postdec1	equ	0xFE5
  3433                           fsr1l	equ	0xFE1
  3434                           indf2	equ	0xFDF
  3435                           fsr2h	equ	0xFDA
  3436                           fsr2l	equ	0xFD9
  3437                           status	equ	0xFD8
  3438                           
  3439 ;; *************** function _EEPROM_ON *****************
  3440 ;; Defined at:
  3441 ;;		line 230 in file "eeprom.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;		None               void
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3455 ;;      Params:         0       0       0       0       0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3458 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    1
  3462 ;; This function calls:
  3463 ;;		_CloseI2C
  3464 ;;		_OpenI2C
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text24
  3471  00767A                     __ptext24:
  3472                           	opt stack 0
  3473  00767A                     _EEPROM_ON:
  3474                           	opt stack 29
  3475                           
  3476                           ;eeprom.c: 232: SSPADD = ((20000000/100000)/4-1);;
  3477                           
  3478                           ;incstack = 0
  3479  00767A  0E31               	movlw	49
  3480  00767C  6EC8               	movwf	4040,c	;volatile
  3481                           
  3482                           ;eeprom.c: 233: CloseI2C();
  3483  00767E  ECF7  F03A         	call	_CloseI2C	;wreg free
  3484                           
  3485                           ;eeprom.c: 234: OpenI2C(0b00001000, 0b00000000);
  3486  007682  0E00               	movlw	0
  3487  007684  6E38               	movwf	OpenI2C@slew,c
  3488  007686  0E08               	movlw	8
  3489  007688  EC64  F03B         	call	_OpenI2C
  3490                           
  3491                           ;eeprom.c: 235: SSPADD = 0x0B;
  3492  00768C  0E0B               	movlw	11
  3493  00768E  6EC8               	movwf	4040,c	;volatile
  3494  007690  0012               	return	
  3495  007692                     __end_of_EEPROM_ON:
  3496                           	opt stack 0
  3497                           tblptru	equ	0xFF8
  3498                           tblptrh	equ	0xFF7
  3499                           tblptrl	equ	0xFF6
  3500                           tablat	equ	0xFF5
  3501                           prodl	equ	0xFF3
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           postdec1	equ	0xFE5
  3505                           fsr1l	equ	0xFE1
  3506                           indf2	equ	0xFDF
  3507                           fsr2h	equ	0xFDA
  3508                           fsr2l	equ	0xFD9
  3509                           status	equ	0xFD8
  3510                           
  3511 ;; *************** function _OpenI2C *****************
  3512 ;; Defined at:
  3513 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_open.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  sync_mode       1    wreg     unsigned char 
  3516 ;;  slew            1    0[COMRAM] unsigned char 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  sync_mode       1    1[COMRAM] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;		None               void
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3528 ;;      Params:         1       0       0       0       0       0       0       0       0
  3529 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3531 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3532 ;;Total ram usage:        2 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_EEPROM_ON
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text25
  3542  0076C8                     __ptext25:
  3543                           	opt stack 0
  3544  0076C8                     _OpenI2C:
  3545                           	opt stack 29
  3546                           
  3547                           ;incstack = 0
  3548                           ;OpenI2C@sync_mode stored from wreg
  3549  0076C8  6E39               	movwf	OpenI2C@sync_mode,c
  3550  0076CA  0E3F               	movlw	63
  3551  0076CC  16C7               	andwf	4039,f,c	;volatile
  3552  0076CE  0E00               	movlw	0
  3553  0076D0  6EC6               	movwf	4038,c	;volatile
  3554  0076D2  0E00               	movlw	0
  3555  0076D4  6EC5               	movwf	4037,c	;volatile
  3556  0076D6  5039               	movf	OpenI2C@sync_mode,w,c
  3557  0076D8  12C6               	iorwf	4038,f,c	;volatile
  3558  0076DA  5038               	movf	OpenI2C@slew,w,c
  3559  0076DC  12C7               	iorwf	4039,f,c	;volatile
  3560  0076DE  8293               	bsf	3987,1,c	;volatile
  3561  0076E0  8093               	bsf	3987,0,c	;volatile
  3562  0076E2  8AC6               	bsf	4038,5,c	;volatile
  3563  0076E4  0012               	return	
  3564  0076E6                     __end_of_OpenI2C:
  3565                           	opt stack 0
  3566                           tblptru	equ	0xFF8
  3567                           tblptrh	equ	0xFF7
  3568                           tblptrl	equ	0xFF6
  3569                           tablat	equ	0xFF5
  3570                           prodl	equ	0xFF3
  3571                           postinc0	equ	0xFEE
  3572                           wreg	equ	0xFE8
  3573                           postdec1	equ	0xFE5
  3574                           fsr1l	equ	0xFE1
  3575                           indf2	equ	0xFDF
  3576                           fsr2h	equ	0xFDA
  3577                           fsr2l	equ	0xFD9
  3578                           status	equ	0xFD8
  3579                           
  3580 ;; *************** function _CloseI2C *****************
  3581 ;; Defined at:
  3582 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_clos.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;		None               void
  3589 ;; Registers used:
  3590 ;;		status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3596 ;;      Params:         0       0       0       0       0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_EEPROM_ON
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text26
  3610  0075EE                     __ptext26:
  3611                           	opt stack 0
  3612  0075EE                     _CloseI2C:
  3613                           	opt stack 29
  3614                           
  3615                           ;incstack = 0
  3616  0075EE  9AC6               	bcf	4038,5,c	;volatile
  3617  0075F0  0012               	return	
  3618  0075F2                     __end_of_CloseI2C:
  3619                           	opt stack 0
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           prodl	equ	0xFF3
  3625                           postinc0	equ	0xFEE
  3626                           wreg	equ	0xFE8
  3627                           postdec1	equ	0xFE5
  3628                           fsr1l	equ	0xFE1
  3629                           indf2	equ	0xFDF
  3630                           fsr2h	equ	0xFDA
  3631                           fsr2l	equ	0xFD9
  3632                           status	equ	0xFD8
  3633                           
  3634 ;; *************** function _ConfigUSART *****************
  3635 ;; Defined at:
  3636 ;;		line 20 in file "uart.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  config_1        1    wreg     unsigned char 
  3639 ;;  config_2        1    6[COMRAM] unsigned char 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  config_1        1    7[COMRAM] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;		None               void
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3651 ;;      Params:         1       0       0       0       0       0       0       0       0
  3652 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3654 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3655 ;;Total ram usage:        2 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    1
  3658 ;; This function calls:
  3659 ;;		_OpenUSART
  3660 ;; This function is called by:
  3661 ;;		_main
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text27
  3666  007626                     __ptext27:
  3667                           	opt stack 0
  3668  007626                     _ConfigUSART:
  3669                           	opt stack 29
  3670                           
  3671                           ;incstack = 0
  3672                           ;ConfigUSART@config_1 stored from wreg
  3673  007626  6E3F               	movwf	ConfigUSART@config_1,c
  3674                           
  3675                           ;uart.c: 22: OpenUSART(config_1, config_2);
  3676  007628  C03E  F038         	movff	ConfigUSART@config_2,OpenUSART@spbrg
  3677  00762C  6A39               	clrf	OpenUSART@spbrg+1,c
  3678  00762E  503F               	movf	ConfigUSART@config_1,w,c
  3679  007630  EC9B  F03C         	call	_OpenUSART
  3680  007634  0012               	return	
  3681  007636                     __end_of_ConfigUSART:
  3682                           	opt stack 0
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           prodl	equ	0xFF3
  3688                           postinc0	equ	0xFEE
  3689                           wreg	equ	0xFE8
  3690                           postdec1	equ	0xFE5
  3691                           fsr1l	equ	0xFE1
  3692                           indf2	equ	0xFDF
  3693                           fsr2h	equ	0xFDA
  3694                           fsr2l	equ	0xFD9
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function _OpenUSART *****************
  3698 ;; Defined at:
  3699 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  config          1    wreg     unsigned char 
  3702 ;;  spbrg           2    0[COMRAM] unsigned int 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  config          1    5[COMRAM] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;		None               void
  3707 ;; Registers used:
  3708 ;;		wreg, status,2
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3714 ;;      Params:         2       0       0       0       0       0       0       0       0
  3715 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3716 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3717 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3718 ;;Total ram usage:        6 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_ConfigUSART
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text28
  3728  007936                     __ptext28:
  3729                           	opt stack 0
  3730  007936                     _OpenUSART:
  3731                           	opt stack 29
  3732                           
  3733                           ;incstack = 0
  3734                           ;OpenUSART@config stored from wreg
  3735  007936  6E3D               	movwf	OpenUSART@config,c
  3736  007938  0E00               	movlw	0
  3737  00793A  6EAC               	movwf	4012,c	;volatile
  3738  00793C  0E00               	movlw	0
  3739  00793E  6EAB               	movwf	4011,c	;volatile
  3740  007940  B03D               	btfsc	OpenUSART@config,0,c
  3741  007942  88AC               	bsf	4012,4,c	;volatile
  3742  007944  A23D               	btfss	OpenUSART@config,1,c
  3743  007946  D002               	goto	l1682
  3744  007948  8CAC               	bsf	4012,6,c	;volatile
  3745  00794A  8CAB               	bsf	4011,6,c	;volatile
  3746  00794C                     l1682:
  3747  00794C  B43D               	btfsc	OpenUSART@config,2,c
  3748  00794E  8EAC               	bsf	4012,7,c	;volatile
  3749  007950  A63D               	btfss	OpenUSART@config,3,c
  3750  007952  D002               	goto	l364
  3751  007954  88AB               	bsf	4011,4,c	;volatile
  3752  007956  D001               	goto	l1690
  3753  007958                     l364:
  3754  007958  8AAB               	bsf	4011,5,c	;volatile
  3755  00795A                     l1690:
  3756  00795A  B83D               	btfsc	OpenUSART@config,4,c
  3757  00795C  84AC               	bsf	4012,2,c	;volatile
  3758  00795E  989E               	bcf	3998,4,c	;volatile
  3759  007960  BA3D               	btfsc	OpenUSART@config,5,c
  3760  007962  86AB               	bsf	4011,3,c	;volatile
  3761  007964  AC3D               	btfss	OpenUSART@config,6,c
  3762  007966  D002               	goto	l368
  3763  007968  8A9D               	bsf	3997,5,c	;volatile
  3764  00796A  D001               	goto	l369
  3765  00796C                     l368:
  3766  00796C  9A9D               	bcf	3997,5,c	;volatile
  3767  00796E                     l369:
  3768  00796E  9A9E               	bcf	3998,5,c	;volatile
  3769  007970  AE3D               	btfss	OpenUSART@config,7,c
  3770  007972  D002               	goto	l370
  3771  007974  889D               	bsf	3997,4,c	;volatile
  3772  007976  D001               	goto	l371
  3773  007978                     l370:
  3774  007978  989D               	bcf	3997,4,c	;volatile
  3775  00797A                     l371:
  3776  00797A  C038  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3777  00797E  C039  F03A         	movff	OpenUSART@spbrg+1,??_OpenUSART
  3778  007982  C03A  F03B         	movff	??_OpenUSART,??_OpenUSART+1
  3779  007986  6A3C               	clrf	(??_OpenUSART+2)& (0+255),c
  3780  007988  503B               	movf	??_OpenUSART+1,w,c
  3781  00798A  6EB0               	movwf	4016,c	;volatile
  3782  00798C  8AAC               	bsf	4012,5,c	;volatile
  3783  00798E  8EAB               	bsf	4011,7,c	;volatile
  3784  007990  9C94               	bcf	3988,6,c	;volatile
  3785  007992  8E94               	bsf	3988,7,c	;volatile
  3786  007994  B8AC               	btfsc	4012,4,c	;volatile
  3787  007996  BEAC               	btfsc	4012,7,c	;volatile
  3788  007998  D001               	goto	l373
  3789  00799A  8C94               	bsf	3988,6,c	;volatile
  3790  00799C                     l373:
  3791  00799C  0012               	return	
  3792  00799E                     __end_of_OpenUSART:
  3793                           	opt stack 0
  3794  0000                     tblptru	equ	0xFF8
  3795                           tblptrh	equ	0xFF7
  3796                           tblptrl	equ	0xFF6
  3797                           tablat	equ	0xFF5
  3798                           prodl	equ	0xFF3
  3799                           postinc0	equ	0xFEE
  3800                           wreg	equ	0xFE8
  3801                           postdec1	equ	0xFE5
  3802                           fsr1l	equ	0xFE1
  3803                           indf2	equ	0xFDF
  3804                           fsr2h	equ	0xFDA
  3805                           fsr2l	equ	0xFD9
  3806                           status	equ	0xFD8
  3807                           tblptru	equ	0xFF8
  3808                           tblptrh	equ	0xFF7
  3809                           tblptrl	equ	0xFF6
  3810                           tablat	equ	0xFF5
  3811                           prodl	equ	0xFF3
  3812                           postinc0	equ	0xFEE
  3813                           wreg	equ	0xFE8
  3814                           postdec1	equ	0xFE5
  3815                           fsr1l	equ	0xFE1
  3816                           indf2	equ	0xFDF
  3817                           fsr2h	equ	0xFDA
  3818                           fsr2l	equ	0xFD9
  3819                           status	equ	0xFD8
  3820                           
  3821                           	psect	rparam
  3822  0000                     tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           prodl	equ	0xFF3
  3827                           postinc0	equ	0xFEE
  3828                           wreg	equ	0xFE8
  3829                           postdec1	equ	0xFE5
  3830                           fsr1l	equ	0xFE1
  3831                           indf2	equ	0xFDF
  3832                           fsr2h	equ	0xFDA
  3833                           fsr2l	equ	0xFD9
  3834                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        300
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      77
    BANK0           160      0     144
    BANK1           256      0     134
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 88
		 -> s_10(BANK1[88]), s_9(COMRAM[11]), s_8(COMRAM[10]), s_11(BANK1[46]), 
		 -> s_7(COMRAM[12]), s_6(COMRAM[8]), str(BANK0[33]), s_3(BANK0[23]), 
		 -> s_2(BANK0[31]), s_1(COMRAM[10]), new_ln(COMRAM[3]), 

    Read_str_@buffer	PTR unsigned char  size(2) Largest target is 33
		 -> str(BANK0[33]), 

    Write_str@str	PTR unsigned char  size(2) Largest target is 88
		 -> s_10(BANK1[88]), s_9(COMRAM[11]), s_8(COMRAM[10]), s_11(BANK1[46]), 
		 -> s_7(COMRAM[12]), s_6(COMRAM[8]), str(BANK0[33]), s_3(BANK0[23]), 
		 -> s_2(BANK0[31]), s_1(COMRAM[10]), new_ln(COMRAM[3]), 

    Clear_str@str	PTR unsigned char  size(2) Largest target is 33
		 -> str(BANK0[33]), 

    ReadEEPROM@str	PTR unsigned char  size(2) Largest target is 33
		 -> str(BANK0[33]), 

    WriteEEPROM@str	PTR unsigned char  size(2) Largest target is 33
		 -> str(BANK0[33]), 


Critical Paths under _main in COMRAM

    _main->_EEPROM_RUN
    _EEPROM_RUN->_WriteEEPROM_DATA
    _WriteEEPROM_DATA->_WriteEEPROM
    _delay_ms->_Delay1KTCYx
    _WriteEEPROM->_EEByteWrite
    _Read_str_->_ReadUSART
    _Read_str_->_WriteUSART
    _ReadEEPROM->_EERandomRead
    _EERandomRead->_WriteI2C
    _EraseEEPROM->_Select
    _Select->_Write_str
    _Write->_WriteUSART
    _ReadUART->_ReadUSART
    _NewLINE->_Write_str
    _Write_str->_putsUSART
    _putsUSART->_WriteUSART
    _EEByteWrite->_WriteI2C
    _EEAckPolling->_WriteI2C
    _WriteI2C->_IdleI2C
    _EEPROM_ON->_OpenI2C
    _ConfigUSART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14383
                        _ConfigUSART
                          _EEPROM_ON
                         _EEPROM_RUN
 ---------------------------------------------------------------------------------
 (1) _EEPROM_RUN                                           4     4      0   14044
                                             15 COMRAM     4     4      0
                          _Clear_str
                        _EraseEEPROM
                         _ReadEEPROM
                             _Select
                              _Write
                   _WriteEEPROM_DATA
                          _Write_str
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _WriteEEPROM_DATA                                     4     4      0    5191
                                             11 COMRAM     4     4      0
                          _Clear_str
                          _Read_str_
                             _Select
                              _Write
                        _WriteEEPROM
                          _Write_str
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     2      0      68
                                              1 COMRAM     2     2      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _WriteEEPROM                                          5     2      3     694
                                              6 COMRAM     5     2      3
                       _EEAckPolling
                        _EEByteWrite
                            _ReadBUF
 ---------------------------------------------------------------------------------
 (3) _Read_str_                                            4     2      2     280
                                              1 COMRAM     4     2      2
                          _ReadUSART
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _Clear_str                                            4     1      3     409
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _ReadEEPROM                                           6     3      3     470
                                              6 COMRAM     6     3      3
                       _EERandomRead
                            _ReadBUF
 ---------------------------------------------------------------------------------
 (3) _EERandomRead                                         3     1      2     141
                                              3 COMRAM     3     1      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _EraseEEPROM                                          5     5      0    4283
                                              8 COMRAM     5     5      0
                       _EEAckPolling
                        _EEByteWrite
                            _ReadBUF
                             _Select
                              _Write
                          _Write_str
 ---------------------------------------------------------------------------------
 (3) _Select                                               3     1      2    2602
                                              5 COMRAM     3     1      2
                            _NewLINE
                           _ReadUART
                              _Write
                          _Write_str
 ---------------------------------------------------------------------------------
 (3) _Write                                                1     1      0      44
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (4) _ReadUART                                             1     1      0      46
                                              1 COMRAM     1     1      0
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (5) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _NewLINE                                              0     0      0     883
                          _Write_str
 ---------------------------------------------------------------------------------
 (2) _Write_str                                            2     0      2     883
                                              3 COMRAM     2     0      2
                          _putsUSART
 ---------------------------------------------------------------------------------
 (3) _putsUSART                                            2     0      2     119
                                              1 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (4) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ReadBUF                                              1     1      0       2
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EEByteWrite                                          3     1      2     406
                                              3 COMRAM     3     1      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _EEAckPolling                                         2     2      0      66
                                              3 COMRAM     2     2      0
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (5) _WriteI2C                                             2     2      0      22
                                              1 COMRAM     2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (6) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_ON                                            0     0      0      73
                           _CloseI2C
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1      73
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _CloseI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigUSART                                          2     1      1     266
                                              6 COMRAM     2     1      1
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     193
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigUSART
     _OpenUSART
   _EEPROM_ON
     _CloseI2C
     _OpenI2C
   _EEPROM_RUN
     _Clear_str
     _EraseEEPROM
       _EEAckPolling
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _EEByteWrite
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ReadBUF
       _Select
         _NewLINE
           _Write_str
             _putsUSART
               _WriteUSART
         _ReadUART
           _ReadUSART
         _Write
           _WriteUSART
         _Write_str
           _putsUSART
             _WriteUSART
       _Write
         _WriteUSART
       _Write_str
         _putsUSART
           _WriteUSART
     _ReadEEPROM
       _EERandomRead
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ReadBUF
     _Select
       _NewLINE
         _Write_str
           _putsUSART
             _WriteUSART
       _ReadUART
         _ReadUSART
       _Write
         _WriteUSART
       _Write_str
         _putsUSART
           _WriteUSART
     _Write
       _WriteUSART
     _WriteEEPROM_DATA
       _Clear_str
       _Read_str_
         _ReadUSART
         _WriteUSART
       _Select
         _NewLINE
           _Write_str
             _putsUSART
               _WriteUSART
         _ReadUART
           _ReadUSART
         _Write
           _WriteUSART
         _Write_str
           _putsUSART
             _WriteUSART
       _Write
         _WriteUSART
       _WriteEEPROM
         _EEAckPolling
           _IdleI2C
           _WriteI2C
             _IdleI2C
         _EEByteWrite
           _IdleI2C
           _WriteI2C
             _IdleI2C
         _ReadBUF
       _Write_str
         _putsUSART
           _WriteUSART
       _delay_ms
         _Delay1KTCYx
     _Write_str
       _putsUSART
         _WriteUSART
     _delay_ms
       _Delay1KTCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      86       7       52.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      90       5       90.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      4D       1       81.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     163      20        0.0%
DATA                 0      0     163       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Mar 30 15:43:38 2016

     __size_of_WriteEEPROM 0048                          _c 004C                          _i 004D  
              _SSPSTATbits 000FC7                __CFG_BOR$ON 000000                __CFG_BORV$3 000000  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                        l213 7FFE                        l233 760A  
                      l161 7DA0                        l137 7810                        l251 7620  
                      l500 7AE8                        l503 7AEC                        l239 7674  
                      l271 78DA                        l440 783E                        l432 7870  
                      l425 781A                        l169 7758                        l370 7978  
                      l522 7C02                        l371 797A                        l443 7842  
                      l435 7836                        l275 78FE                        l364 7958  
                      l452 7866                        l428 781E                        l532 7CA0  
                      l373 799C                        l381 7704                        l541 7C40  
                      l533 7C36                        l438 7860                        l550 7C68  
                      l534 7C30                        l526 7CB4                        l455 786A  
                      l439 783C                        l527 7CAE                        l519 7BFE  
                      l368 796C                        l448 785A                        l472 7A8A  
                      l528 7C1E                        l369 796E                        l633 7A7C  
                      l553 7C70                        l545 7C62                        l537 7C98  
                      l529 7C18                        l482 7ADE                        l394 76F4  
                      l562 7C7E                        l546 7C56                        l538 7C3C  
                      l483 7ABE                        l571 7C9A                        l636 7A3E  
                      l484 7AB8                        l476 7AF2                        l556 7C74  
                      l645 7A6A                        l493 7AD8                        l477 7AE6  
                      l469 7A86                        l549 7C8C                        l478 7AA6  
                      l487 7AD6                        l479 7AA0                        l575 7CA2  
                      l567 7C8E                        l559 7C7A                        l497 7AE0  
                      l489 7AD0                        l889 7648               __CFG_CPB$OFF 000000  
            ?_EERandomRead 003B               __CFG_CPD$OFF 000000                        _s_1 0019  
                      _s_2 0099                        _s_3 00B8                        _s_4 0060  
                      _s_5 0082                        _s_6 002D                        _s_7 0002  
                      _s_8 0023                        _s_9 000E                        _str 00CF  
                      wreg 000FE8               __CFG_FOSC$HS 000000         __size_of_EEPROM_ON 0018  
              ReadEEPROM@c 0042                ReadEEPROM@i 0043               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       l2014 7A4A                       l2104 7880  
                     l2120 78C0                       l2114 78A2                       l2202 7730  
                     l2028 7A7A                       l2124 78CC                       l2116 78AE  
                     l2300 7D8C                       l2132 77D2                       l2208 7742  
                     l2224 7908                       l2144 77FA                       l2400 7F96  
                     l2306 7D9A                       l2250 77C0                       l2234 792C  
                     l2330 7E1A                       l2410 7FBE                       l2180 7C5A  
                     l2228 791A                       l2404 7F9E                       l2238 779A  
                     l2094 769A                       l2350 7E8A                       l2406 7FAE  
                     l2272 7CFA                       l2290 7D70                       l2258 7CD2  
                     l2274 7D04                       l2098 76A2                       l2370 7EE4  
                     l2354 7E9A                       l2268 7CEE                       l2196 7CA6  
                     l2372 7EEA                       l2364 7ECE                       l2436 76C2  
                     l2390 7F52                       l2366 7ED4                       l2392 7F5C  
                     l1690 795A                       l1682 794C                       l2396 7F6C  
                     l2398 7F8E                       l1964 7636                       l1956 7662  
                     l1996 7A1C                       u2250 7C86                       u1660 7A76  
                     u2787 764A                       _s_10 0100                       _s_11 0158  
                     _main 76AC                       fsr2h 000FDA                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9                       prodl 000FF3  
                     start 0000              __CFG_IESO$OFF 000000            __end_of_IdleI2C 7646  
      __end_of_ConfigUSART 7636        __size_of_EEPROM_RUN 016E              __CFG_MCLRE$ON 000000  
      __end_of_EraseEEPROM 7DA2            __end_of_NewLINE 760A            __end_of_ReadBUF 75FC  
          __end_of_OpenI2C 76E6                _Delay1KTCYx 7646              __CFG_PLLDIV$5 000000  
 __end_of_WriteEEPROM_DATA 7E92                 Read_str_@i 003B             ??_EERandomRead 003D  
                    ?_main 0038                      _CMCON 000FB4                      _RCREG 000FAE  
                    _RCSTA 000FAB                      _SPBRG 000FAF              __CFG_USBDIV$1 000000  
                    _TXREG 000FAD                      _TXSTA 000FAC              __CFG_PWRT$OFF 000000  
            __CFG_WRT0$OFF 000000       __end_of_EEAckPolling 7872              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000                      _Write 7618             __CFG_EBTRB$OFF 000000  
                    tablat 000FF5                 _ReadEEPROM 7792                      status 000FD8  
           __CFG_ICPRT$OFF 000000           __end_of_CloseI2C 75F2             WriteUSART@data 0038  
        __end_of_EEPROM_ON 7692            __initialization 7AF4              Select@range_1 003D  
            Select@range_2 003E              ReadEEPROM@str 003F               __end_of_main 76C8  
        ReadEEPROM@Address 003E           __end_of_ReadUART 7618                 Select@sign 003F  
        ReadEEPROM@Control 0041         __size_of_Clear_str 0030                     ??_main 004B  
            __activetblptr 000002            __CFG_CCP2MX$OFF 000000                     ?_Write 0038  
                   _ADCON1 000FC1           __end_of_WriteI2C 7A7E                OpenI2C@slew 0038  
              _ConfigUSART 7626                  ??_IdleI2C 0038         __size_of_ReadUSART 001E  
                   _SPBRGH 000FB0                _EraseEEPROM 7CB6                     _SSPADD 000FC8  
                   _SSPBUF 000FC9                  ??_NewLINE 003D                  ??_ReadBUF 0038  
         __end_of_delay_ms 76AC         __size_of_Read_str_ 0062                  ??_OpenI2C 0039  
           __CFG_XINST$OFF 000000                     _Select 7872         __size_of_OpenUSART 0068  
           __CFG_STVREN$ON 000000       __size_of_EEByteWrite 0076                     _new_ln 0035  
                   clear_0 7AFA               ??_EEPROM_RUN 0047               __pdataCOMRAM 0001  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
             WriteEEPROM@k 0042        EEAckPolling@control 003C                ?_ReadEEPROM 003E  
               __accesstop 0060    __end_of__initialization 7B66          __end_of_Clear_str 775A  
          __CFG_PBADEN$OFF 000000       __end_of_EERandomRead 7CB6         __size_of_Write_str 0012  
       __end_of_EEPROM_RUN 8000                 _WriteUSART 7656             __pcstackCOMRAM 0038  
             __pidataBANK0 799F               __pidataBANK1 7B70              __end_of_Write 7626  
    __size_of_EEAckPolling 0060          __end_of_ReadUSART 7704          __end_of_Read_str_ 7936  
                  ??_Write 0039              ReadUSART@data 0038                  ?_CloseI2C 0038  
        __end_of_OpenUSART 799E                 __pbssBANK0 00CF                  ?_ReadUART 0038  
            ??_WriteEEPROM 0041               _EEAckPolling 7812                    ?_Select 003D  
             ?_Delay1KTCYx 0038              putsUSART@data 0039                  ?_WriteI2C 0038  
        ?_WriteEEPROM_DATA 0038        __size_of_ReadEEPROM 0038         ??_WriteEEPROM_DATA 0043  
        __end_of_Write_str 767A                  ?_delay_ms 0038                 ??_CloseI2C 0038  
       __size_of_putsUSART 0026                    _SSPCON1 000FC6                    _SSPCON2 000FC5  
             Write_str@str 003B                    _SSPSTAT 000FC7                 ??_ReadUART 0039  
       WriteEEPROM@Address 003E                    _IdleI2C 7636            __CFG_VREGEN$OFF 000000  
                  _NewLINE 75FC                    _ReadBUF 75F2         WriteEEPROM@Control 0041  
                  _OpenI2C 76C8                    __Hparam 0000                    __Lparam 0000  
          __size_of_Select 0062                ?_WriteUSART 0038        __end_of_WriteEEPROM 7812  
                _EEPROM_ON 767A                    __pcinit 7AF4                 ??_WriteI2C 0039  
                  __ramtop 0800                    __ptext0 76AC                    __ptext1 7E92  
                  __ptext2 7DA2                    __ptext3 7692                    __ptext4 7646  
                  __ptext5 77CA                    __ptext6 78D4                    __ptext7 772A  
                  __ptext8 7792                    __ptext9 7BF6                 ??_delay_ms 0039  
    __size_of_EERandomRead 00C0       end_of_initialization 7B66               ?_ConfigUSART 003E  
             ?_EraseEEPROM 0038              __Lmediumconst 0000        ConfigUSART@config_1 003F  
      ConfigUSART@config_2 003E                  _RCSTAbits 000FAB                    postdec1 000FE5  
                  postinc0 000FEE          __end_of_putsUSART 772A                 ?_EEPROM_ON 0038  
             _EERandomRead 7BF6            EEByteWrite@data 003C                  _TRISBbits 000F93  
                _TRISCbits 000F94        __size_of_WriteUSART 0012               ??_ReadEEPROM 0041  
                ReadUART@c 0039                  _TXSTAbits 000FAC                _WriteEEPROM 77CA  
            ??_EEByteWrite 003D                  _Clear_str 772A             __end_of_Select 78D4  
            __pidataCOMRAM 775B       __size_of_Delay1KTCYx 0010         __end_of_ReadEEPROM 77CA  
      start_initialization 7AF4                  _ReadUSART 76E6           WriteI2C@data_out 003A  
                _Read_str_ 78D4          __size_of_CloseI2C 0004                  _OpenUSART 7936  
        __size_of_ReadUART 000E                 ?_Clear_str 0038                   ??_Select 003F  
              __pdataBANK0 0060                __pdataBANK1 0100           __CFG_LPT1OSC$OFF 000000  
              ??_EEPROM_ON 003A        __end_of_EEByteWrite 7AF4          __size_of_WriteI2C 0070  
              __pbssCOMRAM 004B                 ?_ReadUSART 0038                  _Write_str 7668  
               ?_Read_str_ 0039          __size_of_delay_ms 001A               Clear_str@str 0038  
          Delay1KTCYx@unit 0038  __size_of_WriteEEPROM_DATA 00F0                   ?_IdleI2C 0038  
               ?_OpenUSART 0038                   ?_NewLINE 0038       __size_of_ConfigUSART 0010  
                 ?_ReadBUF 0038                  Write@data 0039                   ?_OpenI2C 0038  
     __size_of_EraseEEPROM 00EC               ??_WriteUSART 0038              Read_str_@data 003C  
          Read_str_@buffer 0039             __size_of_Write 000E                 ?_Write_str 003B  
        WriteEEPROM_DATA@b 0045          WriteEEPROM_DATA@j 0044          WriteEEPROM_DATA@m 0043  
        WriteEEPROM_DATA@n 0046         __end_of_WriteUSART 7668                  delay_ms@i 003A  
                delay_ms@t 0039                   _PIE1bits 000F9D                ??_Clear_str 003B  
              _EEByteWrite 7A7E                   _PIR1bits 000F9E                   _PIR2bits 000FA1  
         __CFG_WDTPS$32768 000000                  _putsUSART 7704                   ReadBUF@c 0038  
              ??_ReadUSART 0038                   _CloseI2C 75EE                ??_Read_str_ 003B  
                copy_data0 7B1A                  copy_data1 7B3A                  copy_data2 7B5A  
                 _ReadUART 760A           OpenI2C@sync_mode 0039                ??_OpenUSART 003A  
         __size_of_IdleI2C 0010            OpenUSART@config 003D               ?_WriteEEPROM 003E  
         __size_of_NewLINE 000E           __size_of_ReadBUF 000A                   __Hrparam 0000  
         __size_of_OpenI2C 001E                   __Lrparam 0000                   _WriteI2C 7A0E  
               ?_putsUSART 0039                 _EEPROM_RUN 7E92                   _delay_ms 7692  
                 __ptext10 7CB6                   __ptext11 7872                   __ptext20 7A7E  
                 __ptext12 7618                   __ptext21 7812                   __ptext13 760A  
                 __ptext22 7A0E                   __ptext14 76E6                   __ptext23 7636  
                 __ptext15 75FC                   __ptext24 767A                   __ptext16 7668  
                 __ptext25 76C8                   __ptext17 7704                   __ptext26 75EE  
                 __ptext18 7656                   __ptext27 7626                   __ptext19 75F2  
                 __ptext28 7936                ??_Write_str 003D                   _config_1 0001  
         _WriteEEPROM_DATA 7DA2              __size_of_main 001C              ?_EEAckPolling 0038  
              EEPROM_RUN@d 0048                EEPROM_RUN@i 0047                EEPROM_RUN@j 004A  
              EEPROM_RUN@n 0049              ??_Delay1KTCYx 0038               EraseEEPROM@i 0043  
             EraseEEPROM@j 0041               EraseEEPROM@m 0040               EraseEEPROM@n 0044  
             EraseEEPROM@p 0042      __CFG_CPUDIV$OSC1_PLL2 000000             OpenUSART@spbrg 0038  
               Clear_str@i 003B                 Clear_str@n 003A             ??_EEAckPolling 003B  
       EEByteWrite@address 003B        EERandomRead@address 003B         EEByteWrite@control 003D  
              ??_putsUSART 003B        EERandomRead@control 003D                ?_EEPROM_RUN 0038  
      __end_of_Delay1KTCYx 7656             WriteEEPROM@str 003F                _SSPCON1bits 000FC6  
              _SSPCON2bits 000FC5              ??_ConfigUSART 003F              ??_EraseEEPROM 0040  
             _USART_Status 004B               ?_EEByteWrite 003B  
